ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"sd.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.xchg_byte,"ax",%progbits
  18              		.align	1
  19              		.global	xchg_byte
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	xchg_byte:
  27              	.LVL0:
  28              	.LFB132:
  29              		.file 1 "Core/Src/sd.c"
   1:Core/Src/sd.c **** #include "sd.h"
   2:Core/Src/sd.c **** 
   3:Core/Src/sd.c **** /* MMC/SD command */
   4:Core/Src/sd.c **** #define CMD0 (0)           /* GO_IDLE_STATE */
   5:Core/Src/sd.c **** #define CMD1 (1)           /* SEND_OP_COND (MMC) */
   6:Core/Src/sd.c **** #define ACMD41 (0x80 + 41) /* SEND_OP_COND (SDC) */
   7:Core/Src/sd.c **** #define CMD8 (8)           /* SEND_IF_COND */
   8:Core/Src/sd.c **** #define CMD9 (9)           /* SEND_CSD */
   9:Core/Src/sd.c **** #define CMD10 (10)         /* SEND_CID */
  10:Core/Src/sd.c **** #define CMD12 (12)         /* STOP_TRANSMISSION */
  11:Core/Src/sd.c **** #define CMD13 (13)
  12:Core/Src/sd.c **** #define ACMD13 (0x80 + 13) /* SD_STATUS (SDC) */
  13:Core/Src/sd.c **** #define CMD16 (16)         /* SET_BLOCKLEN */
  14:Core/Src/sd.c **** #define CMD17 (17)         /* READ_SINGLE_BLOCK */
  15:Core/Src/sd.c **** #define CMD18 (18)         /* READ_MULTIPLE_BLOCK */
  16:Core/Src/sd.c **** #define CMD23 (23)         /* SET_BLOCK_COUNT (MMC) */
  17:Core/Src/sd.c **** #define ACMD23 (0x80 + 23) /* SET_WR_BLK_ERASE_COUNT (SDC) */
  18:Core/Src/sd.c **** #define CMD24 (24)         /* WRITE_BLOCK */
  19:Core/Src/sd.c **** #define CMD25 (25)         /* WRITE_MULTIPLE_BLOCK */
  20:Core/Src/sd.c **** #define CMD32 (32)         /* ERASE_ER_BLK_START */
  21:Core/Src/sd.c **** #define CMD33 (33)         /* ERASE_ER_BLK_END */
  22:Core/Src/sd.c **** #define CMD38 (38)         /* ERASE */
  23:Core/Src/sd.c **** #define CMD55 (55)         /* APP_CMD */
  24:Core/Src/sd.c **** #define CMD58 (58)         /* READ_OCR */
  25:Core/Src/sd.c **** 
  26:Core/Src/sd.c **** /*Fetch SPI_CS_PIN high or low*/
  27:Core/Src/sd.c **** #define CS_HIGH()                                                    \
  28:Core/Src/sd.c ****     {                                                                \
  29:Core/Src/sd.c ****         HAL_GPIO_WritePin(SD_CS_GPIO_Port, SD_CS_Pin, GPIO_PIN_SET); \
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 2


  30:Core/Src/sd.c ****     }
  31:Core/Src/sd.c **** #define CS_LOW()                                                       \
  32:Core/Src/sd.c ****     {                                                                  \
  33:Core/Src/sd.c ****         HAL_GPIO_WritePin(SD_CS_GPIO_Port, SD_CS_Pin, GPIO_PIN_RESET); \
  34:Core/Src/sd.c ****     }
  35:Core/Src/sd.c **** //(Note that the _256 is used as a mask to clear the prescalar bits as it provides binary 111 in th
  36:Core/Src/sd.c **** #define FCLK_SLOW()                                                                                
  37:Core/Src/sd.c ****     {                                                                                              
  38:Core/Src/sd.c ****         MODIFY_REG(SD_SPI_HANDLE.Instance->CR1, SPI_BAUDRATEPRESCALER_256, SPI_BAUDRATEPRESCALER_12
  39:Core/Src/sd.c ****     } /* Set SCLK = slow, approx 280 KBits/s*/
  40:Core/Src/sd.c **** #define FCLK_FAST()                                                                                
  41:Core/Src/sd.c ****     {                                                                                              
  42:Core/Src/sd.c ****         MODIFY_REG(SD_SPI_HANDLE.Instance->CR1, SPI_BAUDRATEPRESCALER_256, SPI_BAUDRATEPRESCALER_8)
  43:Core/Src/sd.c ****     } /* Set SCLK = fast, approx 4.5 MBits/s */
  44:Core/Src/sd.c **** 
  45:Core/Src/sd.c **** /*Begin global variable define*/
  46:Core/Src/sd.c **** SD_Info sd_Info; // Structure that stores sd's information
  47:Core/Src/sd.c **** /*End global variable define*/
  48:Core/Src/sd.c **** 
  49:Core/Src/sd.c **** /*Exchange a single byte through spi communication */
  50:Core/Src/sd.c **** UINT8 xchg_byte(UINT8 xmitData)
  51:Core/Src/sd.c **** {
  30              		.loc 1 51 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 16
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 51 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 87B0     		sub	sp, sp, #28
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 32
  42 0004 8DF80F00 		strb	r0, [sp, #15]
  52:Core/Src/sd.c ****     UINT8 rcvData;
  43              		.loc 1 52 5 is_stmt 1 view .LVU2
  53:Core/Src/sd.c ****     HAL_SPI_TransmitReceive(&SD_SPI_HANDLE, &xmitData, &rcvData, 1, 50);
  44              		.loc 1 53 5 view .LVU3
  45 0008 3223     		movs	r3, #50
  46 000a 0093     		str	r3, [sp]
  47 000c 0123     		movs	r3, #1
  48 000e 0DF11702 		add	r2, sp, #23
  49 0012 0DF10F01 		add	r1, sp, #15
  50 0016 0448     		ldr	r0, .L3
  51              	.LVL1:
  52              		.loc 1 53 5 is_stmt 0 view .LVU4
  53 0018 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
  54              	.LVL2:
  54:Core/Src/sd.c ****     return rcvData;
  55              		.loc 1 54 5 is_stmt 1 view .LVU5
  55:Core/Src/sd.c **** }
  56              		.loc 1 55 1 is_stmt 0 view .LVU6
  57 001c 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
  58 0020 07B0     		add	sp, sp, #28
  59              	.LCFI2:
  60              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 3


  61              		@ sp needed
  62 0022 5DF804FB 		ldr	pc, [sp], #4
  63              	.L4:
  64 0026 00BF     		.align	2
  65              	.L3:
  66 0028 00000000 		.word	hspi2
  67              		.cfi_endproc
  68              	.LFE132:
  70              		.section	.text.rcv_mul_byte,"ax",%progbits
  71              		.align	1
  72              		.global	rcv_mul_byte
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv4-sp-d16
  78              	rcv_mul_byte:
  79              	.LVL3:
  80              	.LFB133:
  56:Core/Src/sd.c **** 
  57:Core/Src/sd.c **** /*recieve multiple bytes*/
  58:Core/Src/sd.c **** void rcv_mul_byte(UINT8 *rcvData, UINT8 len)
  59:Core/Src/sd.c **** {
  81              		.loc 1 59 1 is_stmt 1 view -0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		.loc 1 59 1 is_stmt 0 view .LVU8
  86 0000 70B5     		push	{r4, r5, r6, lr}
  87              	.LCFI3:
  88              		.cfi_def_cfa_offset 16
  89              		.cfi_offset 4, -16
  90              		.cfi_offset 5, -12
  91              		.cfi_offset 6, -8
  92              		.cfi_offset 14, -4
  93 0002 0646     		mov	r6, r0
  94 0004 0D46     		mov	r5, r1
  60:Core/Src/sd.c ****     for (int i = 0; i < len; i++)
  95              		.loc 1 60 5 is_stmt 1 view .LVU9
  96              	.LBB2:
  97              		.loc 1 60 10 view .LVU10
  98              	.LVL4:
  99              		.loc 1 60 14 is_stmt 0 view .LVU11
 100 0006 0024     		movs	r4, #0
 101              		.loc 1 60 5 view .LVU12
 102 0008 04E0     		b	.L6
 103              	.LVL5:
 104              	.L7:
  61:Core/Src/sd.c ****     {
  62:Core/Src/sd.c ****         rcvData[i] = xchg_byte(SD_DUMMY_BYTE);
 105              		.loc 1 62 9 is_stmt 1 discriminator 3 view .LVU13
 106              		.loc 1 62 22 is_stmt 0 discriminator 3 view .LVU14
 107 000a FF20     		movs	r0, #255
 108 000c FFF7FEFF 		bl	xchg_byte
 109              	.LVL6:
 110              		.loc 1 62 20 discriminator 3 view .LVU15
 111 0010 3055     		strb	r0, [r6, r4]
  60:Core/Src/sd.c ****     for (int i = 0; i < len; i++)
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 4


 112              		.loc 1 60 30 is_stmt 1 discriminator 3 view .LVU16
  60:Core/Src/sd.c ****     for (int i = 0; i < len; i++)
 113              		.loc 1 60 31 is_stmt 0 discriminator 3 view .LVU17
 114 0012 0134     		adds	r4, r4, #1
 115              	.LVL7:
 116              	.L6:
  60:Core/Src/sd.c ****     for (int i = 0; i < len; i++)
 117              		.loc 1 60 21 is_stmt 1 discriminator 1 view .LVU18
  60:Core/Src/sd.c ****     for (int i = 0; i < len; i++)
 118              		.loc 1 60 5 is_stmt 0 discriminator 1 view .LVU19
 119 0014 A542     		cmp	r5, r4
 120 0016 F8DC     		bgt	.L7
 121              	.LBE2:
  63:Core/Src/sd.c ****     }
  64:Core/Src/sd.c **** }
 122              		.loc 1 64 1 view .LVU20
 123 0018 70BD     		pop	{r4, r5, r6, pc}
 124              		.loc 1 64 1 view .LVU21
 125              		.cfi_endproc
 126              	.LFE133:
 128              		.section	.text.xmit_mul_byte,"ax",%progbits
 129              		.align	1
 130              		.global	xmit_mul_byte
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu fpv4-sp-d16
 136              	xmit_mul_byte:
 137              	.LVL8:
 138              	.LFB134:
  65:Core/Src/sd.c **** 
  66:Core/Src/sd.c **** /*transmit multiple bytes*/
  67:Core/Src/sd.c **** void xmit_mul_byte(UINT8 *xmitData, UINT8 len)
  68:Core/Src/sd.c **** {
 139              		.loc 1 68 1 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		.loc 1 68 1 is_stmt 0 view .LVU23
 144 0000 70B5     		push	{r4, r5, r6, lr}
 145              	.LCFI4:
 146              		.cfi_def_cfa_offset 16
 147              		.cfi_offset 4, -16
 148              		.cfi_offset 5, -12
 149              		.cfi_offset 6, -8
 150              		.cfi_offset 14, -4
 151 0002 0546     		mov	r5, r0
 152 0004 0E46     		mov	r6, r1
  69:Core/Src/sd.c ****     for (int i = 0; i < len; i++)
 153              		.loc 1 69 5 is_stmt 1 view .LVU24
 154              	.LBB3:
 155              		.loc 1 69 10 view .LVU25
 156              	.LVL9:
 157              		.loc 1 69 14 is_stmt 0 view .LVU26
 158 0006 0024     		movs	r4, #0
 159              		.loc 1 69 5 view .LVU27
 160 0008 04E0     		b	.L10
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 5


 161              	.LVL10:
 162              	.L11:
  70:Core/Src/sd.c ****     {
  71:Core/Src/sd.c ****         xchg_byte(*(++xmitData));
 163              		.loc 1 71 9 is_stmt 1 discriminator 3 view .LVU28
 164              		.loc 1 71 9 is_stmt 0 discriminator 3 view .LVU29
 165 000a 15F8010F 		ldrb	r0, [r5, #1]!	@ zero_extendqisi2
 166              	.LVL11:
 167              		.loc 1 71 9 discriminator 3 view .LVU30
 168 000e FFF7FEFF 		bl	xchg_byte
 169              	.LVL12:
  69:Core/Src/sd.c ****     for (int i = 0; i < len; i++)
 170              		.loc 1 69 30 is_stmt 1 discriminator 3 view .LVU31
  69:Core/Src/sd.c ****     for (int i = 0; i < len; i++)
 171              		.loc 1 69 31 is_stmt 0 discriminator 3 view .LVU32
 172 0012 0134     		adds	r4, r4, #1
 173              	.LVL13:
 174              	.L10:
  69:Core/Src/sd.c ****     for (int i = 0; i < len; i++)
 175              		.loc 1 69 21 is_stmt 1 discriminator 1 view .LVU33
  69:Core/Src/sd.c ****     for (int i = 0; i < len; i++)
 176              		.loc 1 69 5 is_stmt 0 discriminator 1 view .LVU34
 177 0014 A642     		cmp	r6, r4
 178 0016 F8DC     		bgt	.L11
  69:Core/Src/sd.c ****     for (int i = 0; i < len; i++)
 179              		.loc 1 69 5 discriminator 1 view .LVU35
 180              	.LBE3:
  72:Core/Src/sd.c ****     }
  73:Core/Src/sd.c **** }
 181              		.loc 1 73 1 view .LVU36
 182 0018 70BD     		pop	{r4, r5, r6, pc}
 183              		.loc 1 73 1 view .LVU37
 184              		.cfi_endproc
 185              	.LFE134:
 187              		.section	.text.sd_wait_ready,"ax",%progbits
 188              		.align	1
 189              		.global	sd_wait_ready
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv4-sp-d16
 195              	sd_wait_ready:
 196              	.LFB135:
  74:Core/Src/sd.c **** 
  75:Core/Src/sd.c **** /*Wait until the sd card is ready or timeout*/
  76:Core/Src/sd.c **** UINT8 sd_wait_ready(void)
  77:Core/Src/sd.c **** {
 197              		.loc 1 77 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 10B5     		push	{r4, lr}
 202              	.LCFI5:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 14, -4
  78:Core/Src/sd.c ****     UINT16 timeout = 0xFFF;
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 6


 206              		.loc 1 78 5 view .LVU39
 207              	.LVL14:
 208              		.loc 1 78 12 is_stmt 0 view .LVU40
 209 0002 40F6FF74 		movw	r4, #4095
 210              	.LVL15:
 211              	.L15:
  79:Core/Src/sd.c ****     UINT8 data;
 212              		.loc 1 79 5 is_stmt 1 discriminator 2 view .LVU41
  80:Core/Src/sd.c ****     do
 213              		.loc 1 80 5 discriminator 2 view .LVU42
  81:Core/Src/sd.c ****     {
  82:Core/Src/sd.c ****         data = xchg_byte(SD_DUMMY_BYTE);
 214              		.loc 1 82 9 discriminator 2 view .LVU43
 215              		.loc 1 82 16 is_stmt 0 discriminator 2 view .LVU44
 216 0006 FF20     		movs	r0, #255
 217 0008 FFF7FEFF 		bl	xchg_byte
 218              	.LVL16:
  83:Core/Src/sd.c ****     } while (data != 0xFF && --timeout);
 219              		.loc 1 83 13 is_stmt 1 discriminator 2 view .LVU45
 220              		.loc 1 83 5 is_stmt 0 discriminator 2 view .LVU46
 221 000c FF28     		cmp	r0, #255
 222 000e 03D0     		beq	.L14
 223              		.loc 1 83 27 discriminator 1 view .LVU47
 224 0010 013C     		subs	r4, r4, #1
 225              	.LVL17:
 226              		.loc 1 83 27 discriminator 1 view .LVU48
 227 0012 A4B2     		uxth	r4, r4
 228              	.LVL18:
 229              		.loc 1 83 27 discriminator 1 view .LVU49
 230 0014 002C     		cmp	r4, #0
 231 0016 F6D1     		bne	.L15
 232              	.L14:
  84:Core/Src/sd.c ****     return (data == 0xFF) ? 1 : 0;
 233              		.loc 1 84 5 is_stmt 1 view .LVU50
  85:Core/Src/sd.c **** }
 234              		.loc 1 85 1 is_stmt 0 view .LVU51
 235 0018 FF28     		cmp	r0, #255
 236 001a 14BF     		ite	ne
 237 001c 0020     		movne	r0, #0
 238              	.LVL19:
 239              		.loc 1 85 1 view .LVU52
 240 001e 0120     		moveq	r0, #1
 241 0020 10BD     		pop	{r4, pc}
 242              		.loc 1 85 1 view .LVU53
 243              		.cfi_endproc
 244              	.LFE135:
 246              		.section	.text.sd_deselect,"ax",%progbits
 247              		.align	1
 248              		.global	sd_deselect
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu fpv4-sp-d16
 254              	sd_deselect:
 255              	.LFB136:
  86:Core/Src/sd.c **** 
  87:Core/Src/sd.c **** /*inactivate spi communication*/
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 7


  88:Core/Src/sd.c **** void sd_deselect(void)
  89:Core/Src/sd.c **** {
 256              		.loc 1 89 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI6:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
  90:Core/Src/sd.c ****     CS_HIGH();
 265              		.loc 1 90 5 view .LVU55
 266 0002 0122     		movs	r2, #1
 267 0004 4FF48051 		mov	r1, #4096
 268 0008 0348     		ldr	r0, .L19
 269 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 270              	.LVL20:
 271              		.loc 1 90 14 view .LVU56
  91:Core/Src/sd.c ****     xchg_byte(SD_DUMMY_BYTE);
 272              		.loc 1 91 5 view .LVU57
 273 000e FF20     		movs	r0, #255
 274 0010 FFF7FEFF 		bl	xchg_byte
 275              	.LVL21:
  92:Core/Src/sd.c **** }
 276              		.loc 1 92 1 is_stmt 0 view .LVU58
 277 0014 08BD     		pop	{r3, pc}
 278              	.L20:
 279 0016 00BF     		.align	2
 280              	.L19:
 281 0018 00040048 		.word	1207960576
 282              		.cfi_endproc
 283              	.LFE136:
 285              		.section	.text.sd_select,"ax",%progbits
 286              		.align	1
 287              		.global	sd_select
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	sd_select:
 294              	.LFB137:
  93:Core/Src/sd.c **** 
  94:Core/Src/sd.c **** /*activate spi communication*/
  95:Core/Src/sd.c **** UINT8 sd_select(void)
  96:Core/Src/sd.c **** {
 295              		.loc 1 96 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299 0000 10B5     		push	{r4, lr}
 300              	.LCFI7:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 14, -4
  97:Core/Src/sd.c ****     /*pull down the CS to select the sd card*/
  98:Core/Src/sd.c ****     CS_LOW();
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 8


 304              		.loc 1 98 5 view .LVU60
 305 0002 0022     		movs	r2, #0
 306 0004 4FF48051 		mov	r1, #4096
 307 0008 0748     		ldr	r0, .L26
 308 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 309              	.LVL22:
 310              		.loc 1 98 13 view .LVU61
  99:Core/Src/sd.c ****     xchg_byte(SD_DUMMY_BYTE);
 311              		.loc 1 99 5 view .LVU62
 312 000e FF20     		movs	r0, #255
 313 0010 FFF7FEFF 		bl	xchg_byte
 314              	.LVL23:
 100:Core/Src/sd.c ****     if (sd_wait_ready())
 315              		.loc 1 100 5 view .LVU63
 316              		.loc 1 100 9 is_stmt 0 view .LVU64
 317 0014 FFF7FEFF 		bl	sd_wait_ready
 318              	.LVL24:
 319              		.loc 1 100 8 view .LVU65
 320 0018 10B1     		cbz	r0, .L25
 101:Core/Src/sd.c ****     {
 102:Core/Src/sd.c ****         return 1;
 321              		.loc 1 102 16 view .LVU66
 322 001a 0124     		movs	r4, #1
 323              	.L22:
 103:Core/Src/sd.c ****     }
 104:Core/Src/sd.c ****     else
 105:Core/Src/sd.c ****     {
 106:Core/Src/sd.c ****         /*select fail with no valid response*/
 107:Core/Src/sd.c ****         /*timeout*/
 108:Core/Src/sd.c ****         sd_deselect();
 109:Core/Src/sd.c ****         return 0;
 110:Core/Src/sd.c ****     }
 111:Core/Src/sd.c **** }
 324              		.loc 1 111 1 view .LVU67
 325 001c 2046     		mov	r0, r4
 326 001e 10BD     		pop	{r4, pc}
 327              	.L25:
 328 0020 0446     		mov	r4, r0
 108:Core/Src/sd.c ****         return 0;
 329              		.loc 1 108 9 is_stmt 1 view .LVU68
 330 0022 FFF7FEFF 		bl	sd_deselect
 331              	.LVL25:
 109:Core/Src/sd.c ****     }
 332              		.loc 1 109 9 view .LVU69
 109:Core/Src/sd.c ****     }
 333              		.loc 1 109 16 is_stmt 0 view .LVU70
 334 0026 F9E7     		b	.L22
 335              	.L27:
 336              		.align	2
 337              	.L26:
 338 0028 00040048 		.word	1207960576
 339              		.cfi_endproc
 340              	.LFE137:
 342              		.section	.text.send_cmd,"ax",%progbits
 343              		.align	1
 344              		.syntax unified
 345              		.thumb
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 9


 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	send_cmd:
 350              	.LVL26:
 351              	.LFB138:
 112:Core/Src/sd.c **** 
 113:Core/Src/sd.c **** /*return command response token*/
 114:Core/Src/sd.c **** /*CS toggle to select or deslect is already included*/
 115:Core/Src/sd.c **** static Res_Status send_cmd(UINT8 cmd, UINT32 arg)
 116:Core/Src/sd.c **** {
 352              		.loc 1 116 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		.loc 1 116 1 is_stmt 0 view .LVU72
 357 0000 38B5     		push	{r3, r4, r5, lr}
 358              	.LCFI8:
 359              		.cfi_def_cfa_offset 16
 360              		.cfi_offset 3, -16
 361              		.cfi_offset 4, -12
 362              		.cfi_offset 5, -8
 363              		.cfi_offset 14, -4
 364 0002 0446     		mov	r4, r0
 365 0004 0D46     		mov	r5, r1
 117:Core/Src/sd.c ****     UINT8 rs;
 366              		.loc 1 117 5 is_stmt 1 view .LVU73
 118:Core/Src/sd.c ****     UINT8 crc;
 367              		.loc 1 118 5 view .LVU74
 119:Core/Src/sd.c ****     if (cmd & 0x80)
 368              		.loc 1 119 5 view .LVU75
 369              		.loc 1 119 8 is_stmt 0 view .LVU76
 370 0006 10F0800F 		tst	r0, #128
 371 000a 29D1     		bne	.L38
 372              	.LVL27:
 373              	.L29:
 120:Core/Src/sd.c ****     {
 121:Core/Src/sd.c ****         /*ACMD commands*/
 122:Core/Src/sd.c ****         cmd &= 0x7F;
 123:Core/Src/sd.c ****         rs = send_cmd(CMD55, 0);
 124:Core/Src/sd.c ****         if (rs > 1)
 125:Core/Src/sd.c ****         {
 126:Core/Src/sd.c ****             /*Illegal command response not 0*/
 127:Core/Src/sd.c ****             return (Res_Status)rs;
 128:Core/Src/sd.c ****         }
 129:Core/Src/sd.c ****     }
 130:Core/Src/sd.c **** 
 131:Core/Src/sd.c ****     /*reset communication status*/
 132:Core/Src/sd.c ****     sd_deselect();
 374              		.loc 1 132 5 is_stmt 1 view .LVU77
 375 000c FFF7FEFF 		bl	sd_deselect
 376              	.LVL28:
 133:Core/Src/sd.c ****     if (!sd_select())
 377              		.loc 1 133 5 view .LVU78
 378              		.loc 1 133 10 is_stmt 0 view .LVU79
 379 0010 FFF7FEFF 		bl	sd_select
 380              	.LVL29:
 381              		.loc 1 133 8 view .LVU80
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 10


 382 0014 98B3     		cbz	r0, .L34
 134:Core/Src/sd.c ****     {
 135:Core/Src/sd.c ****         /*Select fail*/
 136:Core/Src/sd.c ****         return TIMEOUT;
 137:Core/Src/sd.c ****     }
 138:Core/Src/sd.c **** 
 139:Core/Src/sd.c ****     /*Send command packet*/
 140:Core/Src/sd.c ****     xchg_byte(0x40 | cmd);
 383              		.loc 1 140 5 is_stmt 1 view .LVU81
 384 0016 44F04000 		orr	r0, r4, #64
 385 001a FFF7FEFF 		bl	xchg_byte
 386              	.LVL30:
 141:Core/Src/sd.c ****     xchg_byte((UINT8)(arg >> 24));
 387              		.loc 1 141 5 view .LVU82
 388 001e 280E     		lsrs	r0, r5, #24
 389 0020 FFF7FEFF 		bl	xchg_byte
 390              	.LVL31:
 142:Core/Src/sd.c ****     xchg_byte((UINT8)(arg >> 16));
 391              		.loc 1 142 5 view .LVU83
 392 0024 C5F30740 		ubfx	r0, r5, #16, #8
 393 0028 FFF7FEFF 		bl	xchg_byte
 394              	.LVL32:
 143:Core/Src/sd.c ****     xchg_byte((UINT8)(arg >> 8));
 395              		.loc 1 143 5 view .LVU84
 396 002c C5F30720 		ubfx	r0, r5, #8, #8
 397 0030 FFF7FEFF 		bl	xchg_byte
 398              	.LVL33:
 144:Core/Src/sd.c ****     xchg_byte((UINT8)arg);
 399              		.loc 1 144 5 view .LVU85
 400 0034 E8B2     		uxtb	r0, r5
 401 0036 FFF7FEFF 		bl	xchg_byte
 402              	.LVL34:
 145:Core/Src/sd.c **** 
 146:Core/Src/sd.c ****     /*crc + stop byte*/
 147:Core/Src/sd.c ****     switch (cmd)
 403              		.loc 1 147 5 view .LVU86
 404 003a E4B1     		cbz	r4, .L35
 405 003c 082C     		cmp	r4, #8
 406 003e 1CD1     		bne	.L36
 148:Core/Src/sd.c ****     {
 149:Core/Src/sd.c ****     case CMD0:
 150:Core/Src/sd.c ****         crc = 0X95;
 151:Core/Src/sd.c ****         break;
 152:Core/Src/sd.c ****     case CMD8:
 153:Core/Src/sd.c ****         crc = 0x87;
 407              		.loc 1 153 13 is_stmt 0 view .LVU87
 408 0040 8720     		movs	r0, #135
 409              	.L31:
 410              	.LVL35:
 154:Core/Src/sd.c ****         break;
 155:Core/Src/sd.c ****     /*dummy crc + stop byte*/
 156:Core/Src/sd.c ****     default:
 157:Core/Src/sd.c ****         crc = 0x01;
 158:Core/Src/sd.c ****     }
 159:Core/Src/sd.c ****     /*send crc + stop byte*/
 160:Core/Src/sd.c ****     xchg_byte(crc);
 411              		.loc 1 160 5 is_stmt 1 view .LVU88
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 11


 412 0042 FFF7FEFF 		bl	xchg_byte
 413              	.LVL36:
 161:Core/Src/sd.c **** 
 162:Core/Src/sd.c ****     /*recieve  R1 response*/
 163:Core/Src/sd.c ****     UINT8 cnt;
 414              		.loc 1 163 5 view .LVU89
 164:Core/Src/sd.c ****     cnt = 10;
 415              		.loc 1 164 5 view .LVU90
 416              		.loc 1 164 9 is_stmt 0 view .LVU91
 417 0046 0A24     		movs	r4, #10
 418              	.LVL37:
 419              	.L33:
 165:Core/Src/sd.c ****     do
 420              		.loc 1 165 5 is_stmt 1 discriminator 2 view .LVU92
 166:Core/Src/sd.c ****     {
 167:Core/Src/sd.c ****         /*wait for response by sending dummy byte*/
 168:Core/Src/sd.c ****         rs = xchg_byte(SD_DUMMY_BYTE);
 421              		.loc 1 168 9 discriminator 2 view .LVU93
 422              		.loc 1 168 14 is_stmt 0 discriminator 2 view .LVU94
 423 0048 FF20     		movs	r0, #255
 424 004a FFF7FEFF 		bl	xchg_byte
 425              	.LVL38:
 169:Core/Src/sd.c ****         /*The left bit(MSB) of R1 response is always 0*/
 170:Core/Src/sd.c ****     } while ((rs & 0x80) && --cnt);
 426              		.loc 1 170 13 is_stmt 1 discriminator 2 view .LVU95
 427              		.loc 1 170 5 is_stmt 0 discriminator 2 view .LVU96
 428 004e 10F0800F 		tst	r0, #128
 429 0052 03D0     		beq	.L32
 430              		.loc 1 170 26 discriminator 1 view .LVU97
 431 0054 631E     		subs	r3, r4, #1
 432              	.LVL39:
 433              		.loc 1 170 26 discriminator 1 view .LVU98
 434 0056 13F0FF04 		ands	r4, r3, #255
 435 005a F5D1     		bne	.L33
 436              	.LVL40:
 437              	.L32:
 171:Core/Src/sd.c **** 
 172:Core/Src/sd.c ****     return (Res_Status)rs;
 438              		.loc 1 172 5 is_stmt 1 view .LVU99
 439              		.loc 1 172 12 is_stmt 0 view .LVU100
 440 005c 80B2     		uxth	r0, r0
 441              	.LVL41:
 442              	.L30:
 173:Core/Src/sd.c **** }
 443              		.loc 1 173 1 view .LVU101
 444 005e 38BD     		pop	{r3, r4, r5, pc}
 445              	.LVL42:
 446              	.L38:
 122:Core/Src/sd.c ****         rs = send_cmd(CMD55, 0);
 447              		.loc 1 122 9 is_stmt 1 view .LVU102
 122:Core/Src/sd.c ****         rs = send_cmd(CMD55, 0);
 448              		.loc 1 122 13 is_stmt 0 view .LVU103
 449 0060 00F07F04 		and	r4, r0, #127
 450              	.LVL43:
 123:Core/Src/sd.c ****         if (rs > 1)
 451              		.loc 1 123 9 is_stmt 1 view .LVU104
 123:Core/Src/sd.c ****         if (rs > 1)
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 12


 452              		.loc 1 123 14 is_stmt 0 view .LVU105
 453 0064 0021     		movs	r1, #0
 454              	.LVL44:
 123:Core/Src/sd.c ****         if (rs > 1)
 455              		.loc 1 123 14 view .LVU106
 456 0066 3720     		movs	r0, #55
 457 0068 FFF7CAFF 		bl	send_cmd
 458              	.LVL45:
 123:Core/Src/sd.c ****         if (rs > 1)
 459              		.loc 1 123 12 view .LVU107
 460 006c C3B2     		uxtb	r3, r0
 461              	.LVL46:
 124:Core/Src/sd.c ****         {
 462              		.loc 1 124 9 is_stmt 1 view .LVU108
 124:Core/Src/sd.c ****         {
 463              		.loc 1 124 12 is_stmt 0 view .LVU109
 464 006e 012B     		cmp	r3, #1
 465 0070 CCD9     		bls	.L29
 127:Core/Src/sd.c ****         }
 466              		.loc 1 127 13 is_stmt 1 view .LVU110
 467 0072 1846     		mov	r0, r3
 127:Core/Src/sd.c ****         }
 468              		.loc 1 127 20 is_stmt 0 view .LVU111
 469 0074 F3E7     		b	.L30
 470              	.LVL47:
 471              	.L35:
 147:Core/Src/sd.c ****     {
 472              		.loc 1 147 5 view .LVU112
 473 0076 9520     		movs	r0, #149
 474 0078 E3E7     		b	.L31
 475              	.L36:
 157:Core/Src/sd.c ****     }
 476              		.loc 1 157 13 view .LVU113
 477 007a 0120     		movs	r0, #1
 478 007c E1E7     		b	.L31
 479              	.L34:
 136:Core/Src/sd.c ****     }
 480              		.loc 1 136 16 view .LVU114
 481 007e 4120     		movs	r0, #65
 482 0080 EDE7     		b	.L30
 483              		.cfi_endproc
 484              	.LFE138:
 486              		.section	.text.SD_GoIdleState,"ax",%progbits
 487              		.align	1
 488              		.global	SD_GoIdleState
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv4-sp-d16
 494              	SD_GoIdleState:
 495              	.LFB139:
 174:Core/Src/sd.c **** 
 175:Core/Src/sd.c **** Res_Status SD_GoIdleState(void)
 176:Core/Src/sd.c **** {
 496              		.loc 1 176 1 is_stmt 1 view -0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 13


 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500 0000 08B5     		push	{r3, lr}
 501              	.LCFI9:
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 3, -8
 504              		.cfi_offset 14, -4
 177:Core/Src/sd.c ****     static Res_Status res;
 505              		.loc 1 177 5 view .LVU116
 178:Core/Src/sd.c ****     /*Pull down the CS voltage*/
 179:Core/Src/sd.c ****     res = send_cmd(CMD0, 0);
 506              		.loc 1 179 5 view .LVU117
 507              		.loc 1 179 11 is_stmt 0 view .LVU118
 508 0002 0021     		movs	r1, #0
 509 0004 0846     		mov	r0, r1
 510 0006 FFF7FEFF 		bl	send_cmd
 511              	.LVL48:
 512              		.loc 1 179 9 view .LVU119
 513 000a 054B     		ldr	r3, .L43
 514 000c 1880     		strh	r0, [r3]	@ movhi
 180:Core/Src/sd.c ****     /*R1 response in idle state*/
 181:Core/Src/sd.c ****     if (res == IDLE_STATE)
 515              		.loc 1 181 5 is_stmt 1 view .LVU120
 516              		.loc 1 181 8 is_stmt 0 view .LVU121
 517 000e 0128     		cmp	r0, #1
 518 0010 02D0     		beq	.L42
 519              	.L40:
 182:Core/Src/sd.c ****     {
 183:Core/Src/sd.c ****         sd_deselect();
 184:Core/Src/sd.c ****     }
 185:Core/Src/sd.c ****     return res;
 520              		.loc 1 185 5 is_stmt 1 view .LVU122
 186:Core/Src/sd.c **** }
 521              		.loc 1 186 1 is_stmt 0 view .LVU123
 522 0012 034B     		ldr	r3, .L43
 523 0014 1888     		ldrh	r0, [r3]
 524 0016 08BD     		pop	{r3, pc}
 525              	.L42:
 183:Core/Src/sd.c ****     }
 526              		.loc 1 183 9 is_stmt 1 view .LVU124
 527 0018 FFF7FEFF 		bl	sd_deselect
 528              	.LVL49:
 529 001c F9E7     		b	.L40
 530              	.L44:
 531 001e 00BF     		.align	2
 532              	.L43:
 533 0020 00000000 		.word	.LANCHOR0
 534              		.cfi_endproc
 535              	.LFE139:
 537              		.section	.text.SD_CheckVersion,"ax",%progbits
 538              		.align	1
 539              		.global	SD_CheckVersion
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu fpv4-sp-d16
 545              	SD_CheckVersion:
 546              	.LFB140:
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 14


 187:Core/Src/sd.c **** 
 188:Core/Src/sd.c **** // #define VOLTAGE_ACC_27_33   0b00000001
 189:Core/Src/sd.c **** // #define VOLTAGE_ACC_LOW     0b00000010
 190:Core/Src/sd.c **** // #define VOLTAGE_ACC_RES1    0b00000100
 191:Core/Src/sd.c **** // #define VOLTAGE_ACC_RES2    0b00001000
 192:Core/Src/sd.c **** 
 193:Core/Src/sd.c **** Res_Status SD_CheckVersion(void)
 194:Core/Src/sd.c **** {
 547              		.loc 1 194 1 view -0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551 0000 30B5     		push	{r4, r5, lr}
 552              	.LCFI10:
 553              		.cfi_def_cfa_offset 12
 554              		.cfi_offset 4, -12
 555              		.cfi_offset 5, -8
 556              		.cfi_offset 14, -4
 557 0002 83B0     		sub	sp, sp, #12
 558              	.LCFI11:
 559              		.cfi_def_cfa_offset 24
 195:Core/Src/sd.c ****     Res_Status rs;
 560              		.loc 1 195 5 view .LVU126
 196:Core/Src/sd.c ****     /*If receive idle state, it means version 2.00*/
 197:Core/Src/sd.c ****     /*CMD8 will response first byte(MSB) identical to R1; */
 198:Core/Src/sd.c ****     /*The next 4 bytes implies command version[31:28], reserved bit[27:12], voltage accepted[11:8],
 199:Core/Src/sd.c ****     if ((rs = send_cmd(CMD8, 0x1AA)) == IDLE_STATE)
 561              		.loc 1 199 5 view .LVU127
 562              		.loc 1 199 15 is_stmt 0 view .LVU128
 563 0004 4FF4D571 		mov	r1, #426
 564 0008 0820     		movs	r0, #8
 565 000a FFF7FEFF 		bl	send_cmd
 566              	.LVL50:
 567 000e 0546     		mov	r5, r0
 568              	.LVL51:
 569              		.loc 1 199 8 view .LVU129
 570 0010 0128     		cmp	r0, #1
 571 0012 05D0     		beq	.L55
 200:Core/Src/sd.c ****     {
 201:Core/Src/sd.c ****         sd_Info.sd_version = SDC_VER2;
 202:Core/Src/sd.c ****         UINT8 R7_Response[5];
 203:Core/Src/sd.c ****         R7_Response[0] = rs;
 204:Core/Src/sd.c ****         for (int i = 1; i < 5; i++)
 205:Core/Src/sd.c ****         {
 206:Core/Src/sd.c ****             R7_Response[i] = xchg_byte(SD_DUMMY_BYTE);
 207:Core/Src/sd.c ****         }
 208:Core/Src/sd.c ****         /*Analyze the R7 response data*/
 209:Core/Src/sd.c ****         /*If you want, you can get more data, even output these information*/
 210:Core/Src/sd.c ****         UINT8 cv, vol, echo;
 211:Core/Src/sd.c ****         cv = (R7_Response[1] >> 4);
 212:Core/Src/sd.c ****         vol = (R7_Response[3] & 0x1F);
 213:Core/Src/sd.c ****         echo = R7_Response[4];
 214:Core/Src/sd.c **** 
 215:Core/Src/sd.c ****         sd_Info.cmd_version = cv;
 216:Core/Src/sd.c ****         sd_Info.support_voltage = vol;
 217:Core/Src/sd.c **** 
 218:Core/Src/sd.c ****         /*Valid voltage(2.7V - 3.6V)*/
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 15


 219:Core/Src/sd.c ****         /*Valid echo 0xAA*/
 220:Core/Src/sd.c **** 
 221:Core/Src/sd.c ****         if (vol == 0x01 && echo == 0xAA)
 222:Core/Src/sd.c ****         {
 223:Core/Src/sd.c ****             /*suitable sd-status check pass*/
 224:Core/Src/sd.c ****             return rs;
 225:Core/Src/sd.c ****         }
 226:Core/Src/sd.c ****         else
 227:Core/Src/sd.c ****         {
 228:Core/Src/sd.c ****             /*These sd card is not well-defined*/
 229:Core/Src/sd.c ****             /*Or some error happen when receiving R7*/
 230:Core/Src/sd.c ****             sd_deselect();
 231:Core/Src/sd.c ****             return OTHER_ERROR;
 232:Core/Src/sd.c ****         }
 233:Core/Src/sd.c ****     }
 234:Core/Src/sd.c ****     /*Version 1.0*/ /*UNTESTED*/
 235:Core/Src/sd.c ****     else if (rs == (ILL_COMMAND | IDLE_STATE))
 572              		.loc 1 235 10 is_stmt 1 view .LVU130
 573              		.loc 1 235 13 is_stmt 0 view .LVU131
 574 0014 0528     		cmp	r0, #5
 575 0016 29D0     		beq	.L56
 236:Core/Src/sd.c ****     {
 237:Core/Src/sd.c ****         sd_Info.sd_version = SDC_VER1;
 238:Core/Src/sd.c ****         UINT16 timeout;
 239:Core/Src/sd.c ****         timeout = 0XFFF;
 240:Core/Src/sd.c ****         /*do something*/
 241:Core/Src/sd.c ****         do
 242:Core/Src/sd.c ****         {
 243:Core/Src/sd.c ****             rs = send_cmd(CMD1, 0);
 244:Core/Src/sd.c ****         } while (rs == SD_NO_ERROR && --timeout);
 245:Core/Src/sd.c ****         /*Time out*/
 246:Core/Src/sd.c ****         if (timeout < 0)
 247:Core/Src/sd.c ****         {
 248:Core/Src/sd.c ****             sd_deselect();
 249:Core/Src/sd.c ****             return TIMEOUT;
 250:Core/Src/sd.c ****         }
 251:Core/Src/sd.c ****         return rs;
 252:Core/Src/sd.c ****     }
 253:Core/Src/sd.c ****     else
 254:Core/Src/sd.c ****     {
 255:Core/Src/sd.c ****         return SD_NO_ERROR;
 576              		.loc 1 255 16 view .LVU132
 577 0018 0025     		movs	r5, #0
 578              	.LVL52:
 579              	.L51:
 256:Core/Src/sd.c ****     }
 257:Core/Src/sd.c **** }
 580              		.loc 1 257 1 discriminator 1 view .LVU133
 581 001a 2846     		mov	r0, r5
 582 001c 03B0     		add	sp, sp, #12
 583              	.LCFI12:
 584              		.cfi_remember_state
 585              		.cfi_def_cfa_offset 12
 586              		@ sp needed
 587 001e 30BD     		pop	{r4, r5, pc}
 588              	.LVL53:
 589              	.L55:
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 16


 590              	.LCFI13:
 591              		.cfi_restore_state
 592              	.LBB4:
 201:Core/Src/sd.c ****         UINT8 R7_Response[5];
 593              		.loc 1 201 9 is_stmt 1 view .LVU134
 201:Core/Src/sd.c ****         UINT8 R7_Response[5];
 594              		.loc 1 201 28 is_stmt 0 view .LVU135
 595 0020 1B4B     		ldr	r3, .L57
 596 0022 0022     		movs	r2, #0
 597 0024 DA71     		strb	r2, [r3, #7]
 202:Core/Src/sd.c ****         R7_Response[0] = rs;
 598              		.loc 1 202 9 is_stmt 1 view .LVU136
 203:Core/Src/sd.c ****         for (int i = 1; i < 5; i++)
 599              		.loc 1 203 9 view .LVU137
 203:Core/Src/sd.c ****         for (int i = 1; i < 5; i++)
 600              		.loc 1 203 24 is_stmt 0 view .LVU138
 601 0026 8DF80000 		strb	r0, [sp]
 204:Core/Src/sd.c ****         {
 602              		.loc 1 204 9 is_stmt 1 view .LVU139
 603              	.LBB5:
 204:Core/Src/sd.c ****         {
 604              		.loc 1 204 14 view .LVU140
 605              	.LVL54:
 204:Core/Src/sd.c ****         {
 606              		.loc 1 204 18 is_stmt 0 view .LVU141
 607 002a 0124     		movs	r4, #1
 204:Core/Src/sd.c ****         {
 608              		.loc 1 204 9 view .LVU142
 609 002c 07E0     		b	.L47
 610              	.LVL55:
 611              	.L48:
 206:Core/Src/sd.c ****         }
 612              		.loc 1 206 13 is_stmt 1 discriminator 3 view .LVU143
 206:Core/Src/sd.c ****         }
 613              		.loc 1 206 30 is_stmt 0 discriminator 3 view .LVU144
 614 002e FF20     		movs	r0, #255
 615 0030 FFF7FEFF 		bl	xchg_byte
 616              	.LVL56:
 206:Core/Src/sd.c ****         }
 617              		.loc 1 206 28 discriminator 3 view .LVU145
 618 0034 02AB     		add	r3, sp, #8
 619 0036 2344     		add	r3, r3, r4
 620 0038 03F8080C 		strb	r0, [r3, #-8]
 204:Core/Src/sd.c ****         {
 621              		.loc 1 204 32 is_stmt 1 discriminator 3 view .LVU146
 204:Core/Src/sd.c ****         {
 622              		.loc 1 204 33 is_stmt 0 discriminator 3 view .LVU147
 623 003c 0134     		adds	r4, r4, #1
 624              	.LVL57:
 625              	.L47:
 204:Core/Src/sd.c ****         {
 626              		.loc 1 204 25 is_stmt 1 discriminator 1 view .LVU148
 204:Core/Src/sd.c ****         {
 627              		.loc 1 204 9 is_stmt 0 discriminator 1 view .LVU149
 628 003e 042C     		cmp	r4, #4
 629 0040 F5DD     		ble	.L48
 630              	.LBE5:
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 17


 210:Core/Src/sd.c ****         cv = (R7_Response[1] >> 4);
 631              		.loc 1 210 9 is_stmt 1 view .LVU150
 211:Core/Src/sd.c ****         vol = (R7_Response[3] & 0x1F);
 632              		.loc 1 211 9 view .LVU151
 211:Core/Src/sd.c ****         vol = (R7_Response[3] & 0x1F);
 633              		.loc 1 211 26 is_stmt 0 view .LVU152
 634 0042 9DF80120 		ldrb	r2, [sp, #1]	@ zero_extendqisi2
 211:Core/Src/sd.c ****         vol = (R7_Response[3] & 0x1F);
 635              		.loc 1 211 12 view .LVU153
 636 0046 1209     		lsrs	r2, r2, #4
 637              	.LVL58:
 212:Core/Src/sd.c ****         echo = R7_Response[4];
 638              		.loc 1 212 9 is_stmt 1 view .LVU154
 212:Core/Src/sd.c ****         echo = R7_Response[4];
 639              		.loc 1 212 27 is_stmt 0 view .LVU155
 640 0048 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 212:Core/Src/sd.c ****         echo = R7_Response[4];
 641              		.loc 1 212 13 view .LVU156
 642 004c 03F01F03 		and	r3, r3, #31
 643              	.LVL59:
 213:Core/Src/sd.c **** 
 644              		.loc 1 213 9 is_stmt 1 view .LVU157
 213:Core/Src/sd.c **** 
 645              		.loc 1 213 14 is_stmt 0 view .LVU158
 646 0050 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 647              	.LVL60:
 215:Core/Src/sd.c ****         sd_Info.support_voltage = vol;
 648              		.loc 1 215 9 is_stmt 1 view .LVU159
 215:Core/Src/sd.c ****         sd_Info.support_voltage = vol;
 649              		.loc 1 215 29 is_stmt 0 view .LVU160
 650 0054 0E49     		ldr	r1, .L57
 651 0056 8A71     		strb	r2, [r1, #6]
 216:Core/Src/sd.c **** 
 652              		.loc 1 216 9 is_stmt 1 view .LVU161
 216:Core/Src/sd.c **** 
 653              		.loc 1 216 33 is_stmt 0 view .LVU162
 654 0058 4B72     		strb	r3, [r1, #9]
 221:Core/Src/sd.c ****         {
 655              		.loc 1 221 9 is_stmt 1 view .LVU163
 221:Core/Src/sd.c ****         {
 656              		.loc 1 221 12 is_stmt 0 view .LVU164
 657 005a 012B     		cmp	r3, #1
 658 005c 01D1     		bne	.L49
 221:Core/Src/sd.c ****         {
 659              		.loc 1 221 25 discriminator 1 view .LVU165
 660 005e AA28     		cmp	r0, #170
 661 0060 DBD0     		beq	.L51
 662              	.L49:
 230:Core/Src/sd.c ****             return OTHER_ERROR;
 663              		.loc 1 230 13 is_stmt 1 view .LVU166
 664 0062 FFF7FEFF 		bl	sd_deselect
 665              	.LVL61:
 231:Core/Src/sd.c ****         }
 666              		.loc 1 231 13 view .LVU167
 231:Core/Src/sd.c ****         }
 667              		.loc 1 231 20 is_stmt 0 view .LVU168
 668 0066 4FF48075 		mov	r5, #256
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 18


 669 006a D6E7     		b	.L51
 670              	.LVL62:
 671              	.L56:
 231:Core/Src/sd.c ****         }
 672              		.loc 1 231 20 view .LVU169
 673              	.LBE4:
 674              	.LBB6:
 237:Core/Src/sd.c ****         UINT16 timeout;
 675              		.loc 1 237 9 is_stmt 1 view .LVU170
 237:Core/Src/sd.c ****         UINT16 timeout;
 676              		.loc 1 237 28 is_stmt 0 view .LVU171
 677 006c 084B     		ldr	r3, .L57
 678 006e 0122     		movs	r2, #1
 679 0070 DA71     		strb	r2, [r3, #7]
 238:Core/Src/sd.c ****         timeout = 0XFFF;
 680              		.loc 1 238 9 is_stmt 1 view .LVU172
 239:Core/Src/sd.c ****         /*do something*/
 681              		.loc 1 239 9 view .LVU173
 682              	.LVL63:
 239:Core/Src/sd.c ****         /*do something*/
 683              		.loc 1 239 17 is_stmt 0 view .LVU174
 684 0072 40F6FF74 		movw	r4, #4095
 685              	.LVL64:
 686              	.L52:
 241:Core/Src/sd.c ****         {
 687              		.loc 1 241 9 is_stmt 1 discriminator 2 view .LVU175
 243:Core/Src/sd.c ****         } while (rs == SD_NO_ERROR && --timeout);
 688              		.loc 1 243 13 discriminator 2 view .LVU176
 243:Core/Src/sd.c ****         } while (rs == SD_NO_ERROR && --timeout);
 689              		.loc 1 243 18 is_stmt 0 discriminator 2 view .LVU177
 690 0076 0021     		movs	r1, #0
 691 0078 0120     		movs	r0, #1
 692              	.LVL65:
 243:Core/Src/sd.c ****         } while (rs == SD_NO_ERROR && --timeout);
 693              		.loc 1 243 18 discriminator 2 view .LVU178
 694 007a FFF7FEFF 		bl	send_cmd
 695              	.LVL66:
 244:Core/Src/sd.c ****         /*Time out*/
 696              		.loc 1 244 17 is_stmt 1 discriminator 2 view .LVU179
 244:Core/Src/sd.c ****         /*Time out*/
 697              		.loc 1 244 9 is_stmt 0 discriminator 2 view .LVU180
 698 007e 0546     		mov	r5, r0
 699 0080 0028     		cmp	r0, #0
 700 0082 CAD1     		bne	.L51
 244:Core/Src/sd.c ****         /*Time out*/
 701              		.loc 1 244 36 discriminator 1 view .LVU181
 702 0084 013C     		subs	r4, r4, #1
 703              	.LVL67:
 244:Core/Src/sd.c ****         /*Time out*/
 704              		.loc 1 244 36 discriminator 1 view .LVU182
 705 0086 A4B2     		uxth	r4, r4
 706              	.LVL68:
 244:Core/Src/sd.c ****         /*Time out*/
 707              		.loc 1 244 36 discriminator 1 view .LVU183
 708 0088 002C     		cmp	r4, #0
 709 008a F4D1     		bne	.L52
 710 008c C5E7     		b	.L51
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 19


 711              	.L58:
 712 008e 00BF     		.align	2
 713              	.L57:
 714 0090 00000000 		.word	.LANCHOR1
 715              	.LBE6:
 716              		.cfi_endproc
 717              	.LFE140:
 719              		.section	.text.SD_getCardType,"ax",%progbits
 720              		.align	1
 721              		.global	SD_getCardType
 722              		.syntax unified
 723              		.thumb
 724              		.thumb_func
 725              		.fpu fpv4-sp-d16
 727              	SD_getCardType:
 728              	.LFB141:
 258:Core/Src/sd.c **** 
 259:Core/Src/sd.c **** #define ACMD41_HCS 0x40000000
 260:Core/Src/sd.c **** #define ACMD41_SDXC_POWER 0x10000000
 261:Core/Src/sd.c **** #define ACMD41_S18R 0x04000000
 262:Core/Src/sd.c **** #define ACMD41_VOLTAGE 0x00ff8000
 263:Core/Src/sd.c **** #define ACMD41_ARG_HC (ACMD41_HCS | ACMD41_SDXC_POWER | ACMD41_VOLTAGE)
 264:Core/Src/sd.c **** #define ACMD41_ARG_SC (ACMD41_VOLTAGE)
 265:Core/Src/sd.c **** 
 266:Core/Src/sd.c **** /*To check SDHC or SDSC*/
 267:Core/Src/sd.c **** Res_Status SD_getCardType(void)
 268:Core/Src/sd.c **** {
 729              		.loc 1 268 1 is_stmt 1 view -0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 8
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 733 0000 30B5     		push	{r4, r5, lr}
 734              	.LCFI14:
 735              		.cfi_def_cfa_offset 12
 736              		.cfi_offset 4, -12
 737              		.cfi_offset 5, -8
 738              		.cfi_offset 14, -4
 739 0002 83B0     		sub	sp, sp, #12
 740              	.LCFI15:
 741              		.cfi_def_cfa_offset 24
 269:Core/Src/sd.c ****     Res_Status rs;
 742              		.loc 1 269 5 view .LVU185
 270:Core/Src/sd.c ****     /*We should first send ACMD41 to activate sd card's initialization*/
 271:Core/Src/sd.c ****     UINT16 timeout = 0xFFF;
 743              		.loc 1 271 5 view .LVU186
 744              	.LVL69:
 272:Core/Src/sd.c ****     while ((rs = send_cmd(ACMD41, ACMD41_HCS)) != SD_NO_ERROR && --timeout)
 745              		.loc 1 272 5 view .LVU187
 271:Core/Src/sd.c ****     while ((rs = send_cmd(ACMD41, ACMD41_HCS)) != SD_NO_ERROR && --timeout)
 746              		.loc 1 271 12 is_stmt 0 view .LVU188
 747 0004 40F6FF74 		movw	r4, #4095
 748              	.LVL70:
 749              	.L61:
 273:Core/Src/sd.c ****     {
 274:Core/Src/sd.c ****     };
 750              		.loc 1 274 5 is_stmt 1 discriminator 2 view .LVU189
 272:Core/Src/sd.c ****     {
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 20


 751              		.loc 1 272 11 discriminator 2 view .LVU190
 272:Core/Src/sd.c ****     {
 752              		.loc 1 272 18 is_stmt 0 discriminator 2 view .LVU191
 753 0008 4FF08041 		mov	r1, #1073741824
 754 000c A920     		movs	r0, #169
 755 000e FFF7FEFF 		bl	send_cmd
 756              	.LVL71:
 272:Core/Src/sd.c ****     {
 757              		.loc 1 272 11 discriminator 2 view .LVU192
 758 0012 0546     		mov	r5, r0
 759 0014 18B1     		cbz	r0, .L60
 272:Core/Src/sd.c ****     {
 760              		.loc 1 272 63 discriminator 1 view .LVU193
 761 0016 013C     		subs	r4, r4, #1
 762              	.LVL72:
 272:Core/Src/sd.c ****     {
 763              		.loc 1 272 63 discriminator 1 view .LVU194
 764 0018 A4B2     		uxth	r4, r4
 765              	.LVL73:
 272:Core/Src/sd.c ****     {
 766              		.loc 1 272 63 discriminator 1 view .LVU195
 767 001a 002C     		cmp	r4, #0
 768 001c F4D1     		bne	.L61
 769              	.L60:
 770              		.loc 1 274 6 is_stmt 1 view .LVU196
 275:Core/Src/sd.c ****     if (!timeout)
 771              		.loc 1 275 5 view .LVU197
 772              		.loc 1 275 8 is_stmt 0 view .LVU198
 773 001e 64B9     		cbnz	r4, .L62
 276:Core/Src/sd.c ****     {
 277:Core/Src/sd.c ****         timeout = 0xFF;
 774              		.loc 1 277 17 view .LVU199
 775 0020 FF24     		movs	r4, #255
 776              	.LVL74:
 777              	.L64:
 278:Core/Src/sd.c ****         // try with CMD1 command
 279:Core/Src/sd.c ****         while ((rs = send_cmd(CMD1, ACMD41_HCS)) != SD_NO_ERROR && --timeout)
 280:Core/Src/sd.c ****             ;
 778              		.loc 1 280 13 is_stmt 1 discriminator 2 view .LVU200
 279:Core/Src/sd.c ****             ;
 779              		.loc 1 279 15 discriminator 2 view .LVU201
 279:Core/Src/sd.c ****             ;
 780              		.loc 1 279 22 is_stmt 0 discriminator 2 view .LVU202
 781 0022 4FF08041 		mov	r1, #1073741824
 782 0026 0120     		movs	r0, #1
 783              	.LVL75:
 279:Core/Src/sd.c ****             ;
 784              		.loc 1 279 22 discriminator 2 view .LVU203
 785 0028 FFF7FEFF 		bl	send_cmd
 786              	.LVL76:
 279:Core/Src/sd.c ****             ;
 787              		.loc 1 279 15 discriminator 2 view .LVU204
 788 002c 0546     		mov	r5, r0
 789 002e 18B1     		cbz	r0, .L63
 279:Core/Src/sd.c ****             ;
 790              		.loc 1 279 65 discriminator 1 view .LVU205
 791 0030 013C     		subs	r4, r4, #1
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 21


 792              	.LVL77:
 279:Core/Src/sd.c ****             ;
 793              		.loc 1 279 65 discriminator 1 view .LVU206
 794 0032 A4B2     		uxth	r4, r4
 795              	.LVL78:
 279:Core/Src/sd.c ****             ;
 796              		.loc 1 279 65 discriminator 1 view .LVU207
 797 0034 002C     		cmp	r4, #0
 798 0036 F4D1     		bne	.L64
 799              	.L63:
 281:Core/Src/sd.c ****         if (!timeout)
 800              		.loc 1 281 9 is_stmt 1 view .LVU208
 801              		.loc 1 281 12 is_stmt 0 view .LVU209
 802 0038 44B1     		cbz	r4, .L71
 803              	.L62:
 804              	.LVL79:
 282:Core/Src/sd.c ****         {
 283:Core/Src/sd.c ****             sd_deselect();
 284:Core/Src/sd.c ****             goto cmd58test;
 285:Core/Src/sd.c ****             return TIMEOUT;
 286:Core/Src/sd.c ****         } // timeout
 287:Core/Src/sd.c ****     }
 288:Core/Src/sd.c ****     if (rs != SD_NO_ERROR)
 805              		.loc 1 288 5 is_stmt 1 view .LVU210
 806              		.loc 1 288 8 is_stmt 0 view .LVU211
 807 003a 55B9     		cbnz	r5, .L72
 808              	.LVL80:
 809              	.L65:
 289:Core/Src/sd.c ****     {
 290:Core/Src/sd.c ****         sd_deselect();
 291:Core/Src/sd.c ****         return rs; // get other illegal response
 292:Core/Src/sd.c ****     }
 293:Core/Src/sd.c **** 
 294:Core/Src/sd.c **** /*send CMD58 to get OCR info*/
 295:Core/Src/sd.c **** cmd58test:;
 810              		.loc 1 295 11 is_stmt 1 view .LVU212
 296:Core/Src/sd.c ****     if ((rs = send_cmd(CMD58, 0)) != SD_NO_ERROR)
 811              		.loc 1 296 5 view .LVU213
 812              		.loc 1 296 15 is_stmt 0 view .LVU214
 813 003c 0021     		movs	r1, #0
 814 003e 3A20     		movs	r0, #58
 815 0040 FFF7FEFF 		bl	send_cmd
 816              	.LVL81:
 817              	.LDL1:
 297:Core/Src/sd.c ****     {
 298:Core/Src/sd.c ****         goto readocrtest;
 299:Core/Src/sd.c ****         sd_deselect();
 300:Core/Src/sd.c ****         return rs;
 301:Core/Src/sd.c ****     }
 302:Core/Src/sd.c **** readocrtest:;
 818              		.loc 1 302 13 is_stmt 1 view .LVU215
 303:Core/Src/sd.c ****     /*Send succeed, getting R3 response*/
 304:Core/Src/sd.c **** 
 305:Core/Src/sd.c ****     UINT8 R3_res[5];
 819              		.loc 1 305 5 view .LVU216
 306:Core/Src/sd.c ****     R3_res[0] = (UINT8)rs;
 820              		.loc 1 306 5 view .LVU217
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 22


 821              		.loc 1 306 15 is_stmt 0 view .LVU218
 822 0044 8DF80000 		strb	r0, [sp]
 307:Core/Src/sd.c ****     for (int i = 1; i < 5; i++)
 823              		.loc 1 307 5 is_stmt 1 view .LVU219
 824              	.LBB7:
 825              		.loc 1 307 10 view .LVU220
 826              	.LVL82:
 827              		.loc 1 307 14 is_stmt 0 view .LVU221
 828 0048 0124     		movs	r4, #1
 829              	.LVL83:
 830              		.loc 1 307 5 view .LVU222
 831 004a 0DE0     		b	.L67
 832              	.LVL84:
 833              	.L71:
 834              		.loc 1 307 5 view .LVU223
 835              	.LBE7:
 283:Core/Src/sd.c ****             goto cmd58test;
 836              		.loc 1 283 13 is_stmt 1 view .LVU224
 837 004c FFF7FEFF 		bl	sd_deselect
 838              	.LVL85:
 284:Core/Src/sd.c ****             return TIMEOUT;
 839              		.loc 1 284 13 view .LVU225
 840 0050 F4E7     		b	.L65
 841              	.LVL86:
 842              	.L72:
 290:Core/Src/sd.c ****         return rs; // get other illegal response
 843              		.loc 1 290 9 view .LVU226
 844 0052 FFF7FEFF 		bl	sd_deselect
 845              	.LVL87:
 291:Core/Src/sd.c ****     }
 846              		.loc 1 291 9 view .LVU227
 291:Core/Src/sd.c ****     }
 847              		.loc 1 291 16 is_stmt 0 view .LVU228
 848 0056 10E0     		b	.L66
 849              	.LVL88:
 850              	.L68:
 851              	.LBB8:
 308:Core/Src/sd.c ****     {
 309:Core/Src/sd.c ****         R3_res[i] = xchg_byte(SD_DUMMY_BYTE);
 852              		.loc 1 309 9 is_stmt 1 discriminator 3 view .LVU229
 853              		.loc 1 309 21 is_stmt 0 discriminator 3 view .LVU230
 854 0058 FF20     		movs	r0, #255
 855 005a FFF7FEFF 		bl	xchg_byte
 856              	.LVL89:
 857              		.loc 1 309 19 discriminator 3 view .LVU231
 858 005e 02AB     		add	r3, sp, #8
 859 0060 2344     		add	r3, r3, r4
 860 0062 03F8080C 		strb	r0, [r3, #-8]
 307:Core/Src/sd.c ****     {
 861              		.loc 1 307 28 is_stmt 1 discriminator 3 view .LVU232
 307:Core/Src/sd.c ****     {
 862              		.loc 1 307 29 is_stmt 0 discriminator 3 view .LVU233
 863 0066 0134     		adds	r4, r4, #1
 864              	.LVL90:
 865              	.L67:
 307:Core/Src/sd.c ****     {
 866              		.loc 1 307 21 is_stmt 1 discriminator 1 view .LVU234
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 23


 307:Core/Src/sd.c ****     {
 867              		.loc 1 307 5 is_stmt 0 discriminator 1 view .LVU235
 868 0068 042C     		cmp	r4, #4
 869 006a F5DD     		ble	.L68
 870              	.LBE8:
 310:Core/Src/sd.c ****     }
 311:Core/Src/sd.c ****     /*Get ocr CCS(bit30)*/
 312:Core/Src/sd.c ****     /*1 -> SDHC; 0-> SDSC*/
 313:Core/Src/sd.c ****     if (R3_res[1] & 0x80)
 871              		.loc 1 313 5 is_stmt 1 view .LVU236
 872              		.loc 1 313 9 is_stmt 0 view .LVU237
 873 006c 9DF90130 		ldrsb	r3, [sp, #1]
 874              		.loc 1 313 8 view .LVU238
 875 0070 002B     		cmp	r3, #0
 876 0072 05DB     		blt	.L73
 314:Core/Src/sd.c ****     {
 315:Core/Src/sd.c ****         sd_Info.sd_V2cardType = SDHC;
 316:Core/Src/sd.c ****         return SD_NO_ERROR;
 317:Core/Src/sd.c ****     }
 318:Core/Src/sd.c ****     else
 319:Core/Src/sd.c ****     {
 320:Core/Src/sd.c ****         sd_Info.sd_V2cardType = SDSC;
 877              		.loc 1 320 9 is_stmt 1 view .LVU239
 878              		.loc 1 320 31 is_stmt 0 view .LVU240
 879 0074 0025     		movs	r5, #0
 880 0076 054B     		ldr	r3, .L74
 881 0078 1D72     		strb	r5, [r3, #8]
 321:Core/Src/sd.c ****         return SD_NO_ERROR;
 882              		.loc 1 321 9 is_stmt 1 view .LVU241
 883              	.LVL91:
 884              	.L66:
 322:Core/Src/sd.c ****     }
 323:Core/Src/sd.c **** }
 885              		.loc 1 323 1 is_stmt 0 view .LVU242
 886 007a 2846     		mov	r0, r5
 887 007c 03B0     		add	sp, sp, #12
 888              	.LCFI16:
 889              		.cfi_remember_state
 890              		.cfi_def_cfa_offset 12
 891              		@ sp needed
 892 007e 30BD     		pop	{r4, r5, pc}
 893              	.LVL92:
 894              	.L73:
 895              	.LCFI17:
 896              		.cfi_restore_state
 315:Core/Src/sd.c ****         return SD_NO_ERROR;
 897              		.loc 1 315 9 is_stmt 1 view .LVU243
 315:Core/Src/sd.c ****         return SD_NO_ERROR;
 898              		.loc 1 315 31 is_stmt 0 view .LVU244
 899 0080 024B     		ldr	r3, .L74
 900 0082 0122     		movs	r2, #1
 901 0084 1A72     		strb	r2, [r3, #8]
 316:Core/Src/sd.c ****     }
 902              		.loc 1 316 9 is_stmt 1 view .LVU245
 316:Core/Src/sd.c ****     }
 903              		.loc 1 316 16 is_stmt 0 view .LVU246
 904 0086 0025     		movs	r5, #0
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 24


 905 0088 F7E7     		b	.L66
 906              	.L75:
 907 008a 00BF     		.align	2
 908              	.L74:
 909 008c 00000000 		.word	.LANCHOR1
 910              		.cfi_endproc
 911              	.LFE141:
 913              		.section	.text.SD_getCSDRegister,"ax",%progbits
 914              		.align	1
 915              		.global	SD_getCSDRegister
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 919              		.fpu fpv4-sp-d16
 921              	SD_getCSDRegister:
 922              	.LFB142:
 324:Core/Src/sd.c **** 
 325:Core/Src/sd.c **** Res_Status SD_getCSDRegister(void)
 326:Core/Src/sd.c **** {
 923              		.loc 1 326 1 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 16
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927 0000 30B5     		push	{r4, r5, lr}
 928              	.LCFI18:
 929              		.cfi_def_cfa_offset 12
 930              		.cfi_offset 4, -12
 931              		.cfi_offset 5, -8
 932              		.cfi_offset 14, -4
 933 0002 85B0     		sub	sp, sp, #20
 934              	.LCFI19:
 935              		.cfi_def_cfa_offset 32
 327:Core/Src/sd.c ****     Res_Status rs;
 936              		.loc 1 327 5 view .LVU248
 328:Core/Src/sd.c ****     /*Send cmd9 to get CSD Register's information*/
 329:Core/Src/sd.c ****     /*wait for the R1 response from CMD9*/
 330:Core/Src/sd.c ****     if ((rs = send_cmd(CMD9, 0)) != SD_NO_ERROR)
 937              		.loc 1 330 5 view .LVU249
 938              		.loc 1 330 15 is_stmt 0 view .LVU250
 939 0004 0021     		movs	r1, #0
 940 0006 0920     		movs	r0, #9
 941 0008 FFF7FEFF 		bl	send_cmd
 942              	.LVL93:
 943              		.loc 1 330 8 view .LVU251
 944 000c 0546     		mov	r5, r0
 945 000e 0028     		cmp	r0, #0
 946 0010 5CD1     		bne	.L85
 331:Core/Src/sd.c ****     {
 332:Core/Src/sd.c ****         sd_deselect();
 333:Core/Src/sd.c ****         return rs;
 334:Core/Src/sd.c ****     }
 335:Core/Src/sd.c **** 
 336:Core/Src/sd.c ****     /*Get read-block token*/
 337:Core/Src/sd.c ****     UINT8 read_token, timeout;
 338:Core/Src/sd.c ****     timeout = 0xFF;
 947              		.loc 1 338 13 view .LVU252
 948 0012 FF24     		movs	r4, #255
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 25


 949              	.LVL94:
 950              	.L77:
 339:Core/Src/sd.c ****     while ((read_token = xchg_byte(SD_DUMMY_BYTE)) != SD_START_SINGLE_READ_TOKEN && --timeout)
 340:Core/Src/sd.c ****         ;
 951              		.loc 1 340 9 is_stmt 1 discriminator 2 view .LVU253
 339:Core/Src/sd.c ****     while ((read_token = xchg_byte(SD_DUMMY_BYTE)) != SD_START_SINGLE_READ_TOKEN && --timeout)
 952              		.loc 1 339 11 discriminator 2 view .LVU254
 339:Core/Src/sd.c ****     while ((read_token = xchg_byte(SD_DUMMY_BYTE)) != SD_START_SINGLE_READ_TOKEN && --timeout)
 953              		.loc 1 339 26 is_stmt 0 discriminator 2 view .LVU255
 954 0014 FF20     		movs	r0, #255
 955 0016 FFF7FEFF 		bl	xchg_byte
 956              	.LVL95:
 339:Core/Src/sd.c ****     while ((read_token = xchg_byte(SD_DUMMY_BYTE)) != SD_START_SINGLE_READ_TOKEN && --timeout)
 957              		.loc 1 339 11 discriminator 2 view .LVU256
 958 001a FE28     		cmp	r0, #254
 959 001c 03D0     		beq	.L79
 339:Core/Src/sd.c ****     while ((read_token = xchg_byte(SD_DUMMY_BYTE)) != SD_START_SINGLE_READ_TOKEN && --timeout)
 960              		.loc 1 339 82 discriminator 1 view .LVU257
 961 001e 631E     		subs	r3, r4, #1
 962              	.LVL96:
 339:Core/Src/sd.c ****     while ((read_token = xchg_byte(SD_DUMMY_BYTE)) != SD_START_SINGLE_READ_TOKEN && --timeout)
 963              		.loc 1 339 82 discriminator 1 view .LVU258
 964 0020 13F0FF04 		ands	r4, r3, #255
 965 0024 F6D1     		bne	.L77
 966              	.LVL97:
 967              	.L79:
 341:Core/Src/sd.c ****     if (!timeout)
 968              		.loc 1 341 5 is_stmt 1 view .LVU259
 969              		.loc 1 341 8 is_stmt 0 view .LVU260
 970 0026 002C     		cmp	r4, #0
 971 0028 53D0     		beq	.L86
 342:Core/Src/sd.c ****     {
 343:Core/Src/sd.c ****         sd_deselect();
 344:Core/Src/sd.c ****         return TIMEOUT;
 345:Core/Src/sd.c ****     }
 346:Core/Src/sd.c **** 
 347:Core/Src/sd.c ****     /*token valid, then try to get 16bits bytes from the sd card */
 348:Core/Src/sd.c ****     UINT8 csd[16] = {0};
 972              		.loc 1 348 5 is_stmt 1 view .LVU261
 973              		.loc 1 348 11 is_stmt 0 view .LVU262
 974 002a 0023     		movs	r3, #0
 975 002c 0093     		str	r3, [sp]
 976 002e 0193     		str	r3, [sp, #4]
 977 0030 0293     		str	r3, [sp, #8]
 978 0032 0393     		str	r3, [sp, #12]
 349:Core/Src/sd.c ****     rcv_mul_byte(csd, 16);
 979              		.loc 1 349 5 is_stmt 1 view .LVU263
 980 0034 1021     		movs	r1, #16
 981 0036 6846     		mov	r0, sp
 982              	.LVL98:
 983              		.loc 1 349 5 is_stmt 0 view .LVU264
 984 0038 FFF7FEFF 		bl	rcv_mul_byte
 985              	.LVL99:
 350:Core/Src/sd.c **** 
 351:Core/Src/sd.c ****     /*read two dummy crc check bit*/
 352:Core/Src/sd.c ****     xchg_byte(SD_DUMMY_BYTE);
 986              		.loc 1 352 5 is_stmt 1 view .LVU265
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 26


 987 003c FF20     		movs	r0, #255
 988 003e FFF7FEFF 		bl	xchg_byte
 989              	.LVL100:
 353:Core/Src/sd.c ****     xchg_byte(SD_DUMMY_BYTE);
 990              		.loc 1 353 5 view .LVU266
 991 0042 FF20     		movs	r0, #255
 992 0044 FFF7FEFF 		bl	xchg_byte
 993              	.LVL101:
 354:Core/Src/sd.c **** 
 355:Core/Src/sd.c ****     /*Calculate card's block's size, card's capacity*/
 356:Core/Src/sd.c ****     /*SD Ver2.0 (SDHC)*/
 357:Core/Src/sd.c ****     if (sd_Info.sd_version == SDC_VER2 && sd_Info.sd_V2cardType == SDHC)
 994              		.loc 1 357 5 view .LVU267
 995              		.loc 1 357 16 is_stmt 0 view .LVU268
 996 0048 2D4B     		ldr	r3, .L88
 997 004a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 998              		.loc 1 357 8 view .LVU269
 999 004c 1BB9     		cbnz	r3, .L81
 1000              		.loc 1 357 50 discriminator 1 view .LVU270
 1001 004e 2C4B     		ldr	r3, .L88
 1002 0050 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1003              		.loc 1 357 40 discriminator 1 view .LVU271
 1004 0052 012B     		cmp	r3, #1
 1005 0054 41D0     		beq	.L87
 1006              	.L81:
 358:Core/Src/sd.c ****     {
 359:Core/Src/sd.c ****         sd_Info.CSD.c_size = (UINT32)csd[9] + (UINT32)(csd[8] << 8) + ((UINT32)(csd[7] & 0x3F) << 1
 360:Core/Src/sd.c ****         sd_Info.sd_block_size = SDHC_SINGLE_BLOCK_SIZE;
 361:Core/Src/sd.c ****         sd_Info.sd_capacity = (UINT64)(sd_Info.CSD.c_size + 1) * 512 * 1024; // capacity is measure
 362:Core/Src/sd.c ****     }
 363:Core/Src/sd.c ****     /*SDSC*/
 364:Core/Src/sd.c ****     else
 365:Core/Src/sd.c ****     {
 366:Core/Src/sd.c ****         sd_Info.CSD.read_bl_len = csd[5] & 0x1F;
 1007              		.loc 1 366 9 is_stmt 1 view .LVU272
 1008              		.loc 1 366 38 is_stmt 0 view .LVU273
 1009 0056 9DF80500 		ldrb	r0, [sp, #5]	@ zero_extendqisi2
 1010              		.loc 1 366 42 view .LVU274
 1011 005a 00F01F00 		and	r0, r0, #31
 1012              		.loc 1 366 33 view .LVU275
 1013 005e 2849     		ldr	r1, .L88
 1014 0060 0870     		strb	r0, [r1]
 367:Core/Src/sd.c ****         sd_Info.CSD.c_size = ((UINT16)(csd[6] & 0x02) << 10) + (csd[7] << 2) + ((csd[8] & 0xC0) >> 
 1015              		.loc 1 367 9 is_stmt 1 view .LVU276
 1016              		.loc 1 367 43 is_stmt 0 view .LVU277
 1017 0062 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 1018              		.loc 1 367 55 view .LVU278
 1019 0066 9202     		lsls	r2, r2, #10
 1020 0068 02F40062 		and	r2, r2, #2048
 1021              		.loc 1 367 68 view .LVU279
 1022 006c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1023              		.loc 1 367 62 view .LVU280
 1024 0070 02EB8302 		add	r2, r2, r3, lsl #2
 1025              		.loc 1 367 85 view .LVU281
 1026 0074 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 1027              		.loc 1 367 78 view .LVU282
 1028 0078 02EB9312 		add	r2, r2, r3, lsr #6
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 27


 1029              		.loc 1 367 28 view .LVU283
 1030 007c 4A80     		strh	r2, [r1, #2]	@ movhi
 368:Core/Src/sd.c ****         sd_Info.CSD.c_size_mult = (csd[9] & 0x02) + ((csd[10] & 0x80) >> 7);
 1031              		.loc 1 368 9 is_stmt 1 view .LVU284
 1032              		.loc 1 368 39 is_stmt 0 view .LVU285
 1033 007e 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 1034              		.loc 1 368 43 view .LVU286
 1035 0082 03F00203 		and	r3, r3, #2
 1036              		.loc 1 368 58 view .LVU287
 1037 0086 9DF80A40 		ldrb	r4, [sp, #10]	@ zero_extendqisi2
 1038              	.LVL102:
 1039              		.loc 1 368 51 view .LVU288
 1040 008a 03EBD413 		add	r3, r3, r4, lsr #7
 1041              		.loc 1 368 33 view .LVU289
 1042 008e 0B71     		strb	r3, [r1, #4]
 369:Core/Src/sd.c ****         sd_Info.sd_capacity = (sd_Info.CSD.c_size + 1); // block base count
 1043              		.loc 1 369 9 is_stmt 1 view .LVU290
 1044              		.loc 1 369 51 is_stmt 0 view .LVU291
 1045 0090 0132     		adds	r2, r2, #1
 1046              		.loc 1 369 29 view .LVU292
 1047 0092 0A61     		str	r2, [r1, #16]
 1048 0094 0024     		movs	r4, #0
 1049 0096 4C61     		str	r4, [r1, #20]
 370:Core/Src/sd.c **** 
 371:Core/Src/sd.c ****         sd_Info.sd_capacity *= (1 << (sd_Info.CSD.c_size_mult + 2)); // block count = block base co
 1050              		.loc 1 371 9 is_stmt 1 view .LVU293
 1051              		.loc 1 371 63 is_stmt 0 view .LVU294
 1052 0098 0233     		adds	r3, r3, #2
 1053              		.loc 1 371 35 view .LVU295
 1054 009a 0124     		movs	r4, #1
 1055 009c 04FA03F3 		lsl	r3, r4, r3
 1056 00a0 4FEAE37E 		asr	lr, r3, #31
 1057              		.loc 1 371 29 view .LVU296
 1058 00a4 A2FB033C 		umull	r3, ip, r2, r3
 1059 00a8 02FB0EC2 		mla	r2, r2, lr, ip
 1060 00ac 0B61     		str	r3, [r1, #16]
 1061 00ae 4A61     		str	r2, [r1, #20]
 372:Core/Src/sd.c ****         sd_Info.sd_block_size = 1 << (sd_Info.CSD.read_bl_len);      // single block size = 2 ^ (re
 1062              		.loc 1 372 9 is_stmt 1 view .LVU297
 1063              		.loc 1 372 35 is_stmt 0 view .LVU298
 1064 00b0 04FA00F0 		lsl	r0, r4, r0
 1065              		.loc 1 372 31 view .LVU299
 1066 00b4 C860     		str	r0, [r1, #12]
 373:Core/Src/sd.c ****         sd_Info.sd_capacity *= sd_Info.sd_block_size;                // card size = block count * s
 1067              		.loc 1 373 9 is_stmt 1 view .LVU300
 1068              		.loc 1 373 29 is_stmt 0 view .LVU301
 1069 00b6 A3FB0034 		umull	r3, r4, r3, r0
 1070 00ba 00FB0242 		mla	r2, r0, r2, r4
 1071 00be 0B61     		str	r3, [r1, #16]
 1072 00c0 4A61     		str	r2, [r1, #20]
 1073              	.L82:
 374:Core/Src/sd.c ****     }
 375:Core/Src/sd.c **** 
 376:Core/Src/sd.c ****     sd_deselect();
 1074              		.loc 1 376 5 is_stmt 1 view .LVU302
 1075 00c2 FFF7FEFF 		bl	sd_deselect
 1076              	.LVL103:
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 28


 377:Core/Src/sd.c ****     return SD_NO_ERROR;
 1077              		.loc 1 377 5 view .LVU303
 1078              	.L78:
 378:Core/Src/sd.c **** }
 1079              		.loc 1 378 1 is_stmt 0 view .LVU304
 1080 00c6 2846     		mov	r0, r5
 1081 00c8 05B0     		add	sp, sp, #20
 1082              	.LCFI20:
 1083              		.cfi_remember_state
 1084              		.cfi_def_cfa_offset 12
 1085              		@ sp needed
 1086 00ca 30BD     		pop	{r4, r5, pc}
 1087              	.LVL104:
 1088              	.L85:
 1089              	.LCFI21:
 1090              		.cfi_restore_state
 332:Core/Src/sd.c ****         return rs;
 1091              		.loc 1 332 9 is_stmt 1 view .LVU305
 1092 00cc FFF7FEFF 		bl	sd_deselect
 1093              	.LVL105:
 333:Core/Src/sd.c ****     }
 1094              		.loc 1 333 9 view .LVU306
 333:Core/Src/sd.c ****     }
 1095              		.loc 1 333 16 is_stmt 0 view .LVU307
 1096 00d0 F9E7     		b	.L78
 1097              	.LVL106:
 1098              	.L86:
 343:Core/Src/sd.c ****         return TIMEOUT;
 1099              		.loc 1 343 9 is_stmt 1 view .LVU308
 1100 00d2 FFF7FEFF 		bl	sd_deselect
 1101              	.LVL107:
 344:Core/Src/sd.c ****     }
 1102              		.loc 1 344 9 view .LVU309
 344:Core/Src/sd.c ****     }
 1103              		.loc 1 344 16 is_stmt 0 view .LVU310
 1104 00d6 4125     		movs	r5, #65
 1105 00d8 F5E7     		b	.L78
 1106              	.L87:
 359:Core/Src/sd.c ****         sd_Info.sd_block_size = SDHC_SINGLE_BLOCK_SIZE;
 1107              		.loc 1 359 9 is_stmt 1 view .LVU311
 359:Core/Src/sd.c ****         sd_Info.sd_block_size = SDHC_SINGLE_BLOCK_SIZE;
 1108              		.loc 1 359 41 is_stmt 0 view .LVU312
 1109 00da 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 359:Core/Src/sd.c ****         sd_Info.sd_block_size = SDHC_SINGLE_BLOCK_SIZE;
 1110              		.loc 1 359 59 view .LVU313
 1111 00de 9DF80820 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
 359:Core/Src/sd.c ****         sd_Info.sd_block_size = SDHC_SINGLE_BLOCK_SIZE;
 1112              		.loc 1 359 45 view .LVU314
 1113 00e2 03EB0223 		add	r3, r3, r2, lsl #8
 1114 00e6 9BB2     		uxth	r3, r3
 359:Core/Src/sd.c ****         sd_Info.sd_block_size = SDHC_SINGLE_BLOCK_SIZE;
 1115              		.loc 1 359 28 view .LVU315
 1116 00e8 054A     		ldr	r2, .L88
 1117 00ea 5380     		strh	r3, [r2, #2]	@ movhi
 360:Core/Src/sd.c ****         sd_Info.sd_capacity = (UINT64)(sd_Info.CSD.c_size + 1) * 512 * 1024; // capacity is measure
 1118              		.loc 1 360 9 is_stmt 1 view .LVU316
 360:Core/Src/sd.c ****         sd_Info.sd_capacity = (UINT64)(sd_Info.CSD.c_size + 1) * 512 * 1024; // capacity is measure
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 29


 1119              		.loc 1 360 31 is_stmt 0 view .LVU317
 1120 00ec 4FF40071 		mov	r1, #512
 1121 00f0 D160     		str	r1, [r2, #12]
 361:Core/Src/sd.c ****     }
 1122              		.loc 1 361 9 is_stmt 1 view .LVU318
 361:Core/Src/sd.c ****     }
 1123              		.loc 1 361 59 is_stmt 0 view .LVU319
 1124 00f2 0133     		adds	r3, r3, #1
 361:Core/Src/sd.c ****     }
 1125              		.loc 1 361 70 view .LVU320
 1126 00f4 590B     		lsrs	r1, r3, #13
 1127 00f6 DB04     		lsls	r3, r3, #19
 361:Core/Src/sd.c ****     }
 1128              		.loc 1 361 29 view .LVU321
 1129 00f8 1361     		str	r3, [r2, #16]
 1130 00fa 5161     		str	r1, [r2, #20]
 1131 00fc E1E7     		b	.L82
 1132              	.L89:
 1133 00fe 00BF     		.align	2
 1134              	.L88:
 1135 0100 00000000 		.word	.LANCHOR1
 1136              		.cfi_endproc
 1137              	.LFE142:
 1139              		.section	.text.SD_readSingleBlock,"ax",%progbits
 1140              		.align	1
 1141              		.global	SD_readSingleBlock
 1142              		.syntax unified
 1143              		.thumb
 1144              		.thumb_func
 1145              		.fpu fpv4-sp-d16
 1147              	SD_readSingleBlock:
 1148              	.LVL108:
 1149              	.LFB143:
 379:Core/Src/sd.c **** 
 380:Core/Src/sd.c **** /*Read a single block given the address*/
 381:Core/Src/sd.c **** Res_Status SD_readSingleBlock(UINT8 *pbuff, UINT64 addr, UINT32 size)
 382:Core/Src/sd.c **** {
 1150              		.loc 1 382 1 is_stmt 1 view -0
 1151              		.cfi_startproc
 1152              		@ args = 4, pretend = 0, frame = 0
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154              		.loc 1 382 1 is_stmt 0 view .LVU323
 1155 0000 70B5     		push	{r4, r5, r6, lr}
 1156              	.LCFI22:
 1157              		.cfi_def_cfa_offset 16
 1158              		.cfi_offset 4, -16
 1159              		.cfi_offset 5, -12
 1160              		.cfi_offset 6, -8
 1161              		.cfi_offset 14, -4
 1162 0002 0546     		mov	r5, r0
 1163 0004 1146     		mov	r1, r2
 383:Core/Src/sd.c ****     /*Sector count*/
 384:Core/Src/sd.c ****     Res_Status rs;
 1164              		.loc 1 384 5 is_stmt 1 view .LVU324
 385:Core/Src/sd.c ****     /*SDHC and the above sd cards use sector unit to search for the data*/
 386:Core/Src/sd.c ****     if (sd_Info.sd_V2cardType == SDHC && sd_Info.sd_version == SDC_VER2)
 1165              		.loc 1 386 5 view .LVU325
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 30


 1166              		.loc 1 386 16 is_stmt 0 view .LVU326
 1167 0006 1A4A     		ldr	r2, .L101
 1168              	.LVL109:
 1169              		.loc 1 386 16 view .LVU327
 1170 0008 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 1171              		.loc 1 386 8 view .LVU328
 1172 000a 012A     		cmp	r2, #1
 1173 000c 1ED0     		beq	.L98
 1174              	.LVL110:
 1175              	.L91:
 387:Core/Src/sd.c ****     {
 388:Core/Src/sd.c ****         addr /= SDHC_SINGLE_BLOCK_SIZE;
 389:Core/Src/sd.c ****         size = SDHC_SINGLE_BLOCK_SIZE;
 390:Core/Src/sd.c ****     }
 391:Core/Src/sd.c **** 
 392:Core/Src/sd.c ****     /*send cmd17 to read*/
 393:Core/Src/sd.c ****     if ((rs = send_cmd(CMD17, addr)) != SD_NO_ERROR)
 1176              		.loc 1 393 5 is_stmt 1 view .LVU329
 1177              		.loc 1 393 15 is_stmt 0 view .LVU330
 1178 000e 1120     		movs	r0, #17
 1179              	.LVL111:
 1180              		.loc 1 393 15 view .LVU331
 1181 0010 FFF7FEFF 		bl	send_cmd
 1182              	.LVL112:
 1183              		.loc 1 393 8 view .LVU332
 1184 0014 0646     		mov	r6, r0
 1185 0016 20BB     		cbnz	r0, .L99
 394:Core/Src/sd.c ****     {
 395:Core/Src/sd.c ****         sd_deselect();
 396:Core/Src/sd.c ****         return rs;
 397:Core/Src/sd.c ****     }
 398:Core/Src/sd.c **** 
 399:Core/Src/sd.c ****     /*Get block read token*/
 400:Core/Src/sd.c ****     UINT8 timeout = 0xFF;
 1186              		.loc 1 400 11 view .LVU333
 1187 0018 FF24     		movs	r4, #255
 1188              	.LVL113:
 1189              	.L92:
 401:Core/Src/sd.c ****     UINT8 read_token;
 402:Core/Src/sd.c ****     while ((read_token = xchg_byte(SD_DUMMY_BYTE)) != SD_START_SINGLE_READ_TOKEN && --timeout)
 403:Core/Src/sd.c ****         ;
 1190              		.loc 1 403 9 is_stmt 1 discriminator 2 view .LVU334
 402:Core/Src/sd.c ****         ;
 1191              		.loc 1 402 11 discriminator 2 view .LVU335
 402:Core/Src/sd.c ****         ;
 1192              		.loc 1 402 26 is_stmt 0 discriminator 2 view .LVU336
 1193 001a FF20     		movs	r0, #255
 1194 001c FFF7FEFF 		bl	xchg_byte
 1195              	.LVL114:
 402:Core/Src/sd.c ****         ;
 1196              		.loc 1 402 11 discriminator 2 view .LVU337
 1197 0020 FE28     		cmp	r0, #254
 1198 0022 03D0     		beq	.L94
 402:Core/Src/sd.c ****         ;
 1199              		.loc 1 402 82 discriminator 1 view .LVU338
 1200 0024 631E     		subs	r3, r4, #1
 1201              	.LVL115:
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 31


 402:Core/Src/sd.c ****         ;
 1202              		.loc 1 402 82 discriminator 1 view .LVU339
 1203 0026 13F0FF04 		ands	r4, r3, #255
 1204 002a F6D1     		bne	.L92
 1205              	.LVL116:
 1206              	.L94:
 404:Core/Src/sd.c ****     if (!timeout)
 1207              		.loc 1 404 5 is_stmt 1 view .LVU340
 1208              		.loc 1 404 8 is_stmt 0 view .LVU341
 1209 002c E4B1     		cbz	r4, .L100
 405:Core/Src/sd.c ****     { // timeout
 406:Core/Src/sd.c ****         sd_deselect();
 407:Core/Src/sd.c ****         return TIMEOUT;
 408:Core/Src/sd.c ****     }
 409:Core/Src/sd.c ****     /*Read data*/
 410:Core/Src/sd.c ****     rcv_mul_byte(pbuff, size);
 1210              		.loc 1 410 5 is_stmt 1 view .LVU342
 1211 002e 049B     		ldr	r3, [sp, #16]
 1212 0030 D9B2     		uxtb	r1, r3
 1213 0032 2846     		mov	r0, r5
 1214              	.LVL117:
 1215              		.loc 1 410 5 is_stmt 0 view .LVU343
 1216 0034 FFF7FEFF 		bl	rcv_mul_byte
 1217              	.LVL118:
 411:Core/Src/sd.c ****     /*2 crc bit*/
 412:Core/Src/sd.c ****     xchg_byte(SD_DUMMY_BYTE);
 1218              		.loc 1 412 5 is_stmt 1 view .LVU344
 1219 0038 FF20     		movs	r0, #255
 1220 003a FFF7FEFF 		bl	xchg_byte
 1221              	.LVL119:
 413:Core/Src/sd.c ****     xchg_byte(SD_DUMMY_BYTE);
 1222              		.loc 1 413 5 view .LVU345
 1223 003e FF20     		movs	r0, #255
 1224 0040 FFF7FEFF 		bl	xchg_byte
 1225              	.LVL120:
 414:Core/Src/sd.c **** 
 415:Core/Src/sd.c ****     sd_deselect();
 1226              		.loc 1 415 5 view .LVU346
 1227 0044 FFF7FEFF 		bl	sd_deselect
 1228              	.LVL121:
 416:Core/Src/sd.c ****     return SD_NO_ERROR;
 1229              		.loc 1 416 5 view .LVU347
 1230              	.L93:
 417:Core/Src/sd.c **** }
 1231              		.loc 1 417 1 is_stmt 0 view .LVU348
 1232 0048 3046     		mov	r0, r6
 1233 004a 70BD     		pop	{r4, r5, r6, pc}
 1234              	.LVL122:
 1235              	.L98:
 386:Core/Src/sd.c ****     {
 1236              		.loc 1 386 49 discriminator 1 view .LVU349
 1237 004c 084A     		ldr	r2, .L101
 1238 004e D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 386:Core/Src/sd.c ****     {
 1239              		.loc 1 386 39 discriminator 1 view .LVU350
 1240 0050 002A     		cmp	r2, #0
 1241 0052 DCD1     		bne	.L91
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 32


 388:Core/Src/sd.c ****         size = SDHC_SINGLE_BLOCK_SIZE;
 1242              		.loc 1 388 9 is_stmt 1 view .LVU351
 388:Core/Src/sd.c ****         size = SDHC_SINGLE_BLOCK_SIZE;
 1243              		.loc 1 388 14 is_stmt 0 view .LVU352
 1244 0054 490A     		lsrs	r1, r1, #9
 1245 0056 41EAC351 		orr	r1, r1, r3, lsl #23
 1246              	.LVL123:
 389:Core/Src/sd.c ****     }
 1247              		.loc 1 389 9 is_stmt 1 view .LVU353
 389:Core/Src/sd.c ****     }
 1248              		.loc 1 389 14 is_stmt 0 view .LVU354
 1249 005a 4FF40073 		mov	r3, #512
 1250              	.LVL124:
 389:Core/Src/sd.c ****     }
 1251              		.loc 1 389 14 view .LVU355
 1252 005e 0493     		str	r3, [sp, #16]
 1253 0060 D5E7     		b	.L91
 1254              	.LVL125:
 1255              	.L99:
 395:Core/Src/sd.c ****         return rs;
 1256              		.loc 1 395 9 is_stmt 1 view .LVU356
 1257 0062 FFF7FEFF 		bl	sd_deselect
 1258              	.LVL126:
 396:Core/Src/sd.c ****     }
 1259              		.loc 1 396 9 view .LVU357
 396:Core/Src/sd.c ****     }
 1260              		.loc 1 396 16 is_stmt 0 view .LVU358
 1261 0066 EFE7     		b	.L93
 1262              	.LVL127:
 1263              	.L100:
 406:Core/Src/sd.c ****         return TIMEOUT;
 1264              		.loc 1 406 9 is_stmt 1 view .LVU359
 1265 0068 FFF7FEFF 		bl	sd_deselect
 1266              	.LVL128:
 407:Core/Src/sd.c ****     }
 1267              		.loc 1 407 9 view .LVU360
 407:Core/Src/sd.c ****     }
 1268              		.loc 1 407 16 is_stmt 0 view .LVU361
 1269 006c 4126     		movs	r6, #65
 1270 006e EBE7     		b	.L93
 1271              	.L102:
 1272              		.align	2
 1273              	.L101:
 1274 0070 00000000 		.word	.LANCHOR1
 1275              		.cfi_endproc
 1276              	.LFE143:
 1278              		.section	.text.SD_writeSingleBlock,"ax",%progbits
 1279              		.align	1
 1280              		.global	SD_writeSingleBlock
 1281              		.syntax unified
 1282              		.thumb
 1283              		.thumb_func
 1284              		.fpu fpv4-sp-d16
 1286              	SD_writeSingleBlock:
 1287              	.LVL129:
 1288              	.LFB144:
 418:Core/Src/sd.c **** 
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 33


 419:Core/Src/sd.c **** /*Write a single block given the address*/
 420:Core/Src/sd.c **** Res_Status SD_writeSingleBlock(UINT8 *pbuff, UINT64 addr, UINT32 size)
 421:Core/Src/sd.c **** {
 1289              		.loc 1 421 1 is_stmt 1 view -0
 1290              		.cfi_startproc
 1291              		@ args = 4, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293              		.loc 1 421 1 is_stmt 0 view .LVU363
 1294 0000 38B5     		push	{r3, r4, r5, lr}
 1295              	.LCFI23:
 1296              		.cfi_def_cfa_offset 16
 1297              		.cfi_offset 3, -16
 1298              		.cfi_offset 4, -12
 1299              		.cfi_offset 5, -8
 1300              		.cfi_offset 14, -4
 1301 0002 0446     		mov	r4, r0
 1302 0004 1146     		mov	r1, r2
 422:Core/Src/sd.c ****     Res_Status rs;
 1303              		.loc 1 422 5 is_stmt 1 view .LVU364
 423:Core/Src/sd.c **** 
 424:Core/Src/sd.c ****     if (sd_Info.sd_V2cardType == SDHC && sd_Info.sd_version == SDC_VER2)
 1304              		.loc 1 424 5 view .LVU365
 1305              		.loc 1 424 16 is_stmt 0 view .LVU366
 1306 0006 1D4A     		ldr	r2, .L113
 1307              	.LVL130:
 1308              		.loc 1 424 16 view .LVU367
 1309 0008 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 1310              		.loc 1 424 8 view .LVU368
 1311 000a 012A     		cmp	r2, #1
 1312 000c 23D0     		beq	.L110
 1313              	.LVL131:
 1314              	.L104:
 425:Core/Src/sd.c ****     {
 426:Core/Src/sd.c ****         addr /= SDHC_SINGLE_BLOCK_SIZE;
 427:Core/Src/sd.c ****         size = SDHC_SINGLE_BLOCK_SIZE;
 428:Core/Src/sd.c ****     }
 429:Core/Src/sd.c **** 
 430:Core/Src/sd.c ****     /*send CMD24*/
 431:Core/Src/sd.c ****     if ((rs = send_cmd(CMD24, addr)) != SD_NO_ERROR)
 1315              		.loc 1 431 5 is_stmt 1 view .LVU369
 1316              		.loc 1 431 15 is_stmt 0 view .LVU370
 1317 000e 1820     		movs	r0, #24
 1318              	.LVL132:
 1319              		.loc 1 431 15 view .LVU371
 1320 0010 FFF7FEFF 		bl	send_cmd
 1321              	.LVL133:
 1322              		.loc 1 431 8 view .LVU372
 1323 0014 0546     		mov	r5, r0
 1324 0016 48BB     		cbnz	r0, .L111
 432:Core/Src/sd.c ****     {
 433:Core/Src/sd.c ****         sd_deselect();
 434:Core/Src/sd.c ****         return rs;
 435:Core/Src/sd.c ****     }
 436:Core/Src/sd.c **** 
 437:Core/Src/sd.c ****     /*Transmit block write token*/
 438:Core/Src/sd.c ****     // sd_select();
 439:Core/Src/sd.c ****     xchg_byte(SD_DUMMY_BYTE);
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 34


 1325              		.loc 1 439 5 is_stmt 1 view .LVU373
 1326 0018 FF20     		movs	r0, #255
 1327              	.LVL134:
 1328              		.loc 1 439 5 is_stmt 0 view .LVU374
 1329 001a FFF7FEFF 		bl	xchg_byte
 1330              	.LVL135:
 440:Core/Src/sd.c ****     xchg_byte(SD_START_SINGLE_WRITE_TOKEN);
 1331              		.loc 1 440 5 is_stmt 1 view .LVU375
 1332 001e FE20     		movs	r0, #254
 1333 0020 FFF7FEFF 		bl	xchg_byte
 1334              	.LVL136:
 441:Core/Src/sd.c **** 
 442:Core/Src/sd.c ****     /*Transmit data*/
 443:Core/Src/sd.c ****     xmit_mul_byte(pbuff, size);
 1335              		.loc 1 443 5 view .LVU376
 1336 0024 049B     		ldr	r3, [sp, #16]
 1337 0026 D9B2     		uxtb	r1, r3
 1338 0028 2046     		mov	r0, r4
 1339 002a FFF7FEFF 		bl	xmit_mul_byte
 1340              	.LVL137:
 444:Core/Src/sd.c ****     xchg_byte(SD_DUMMY_BYTE);
 1341              		.loc 1 444 5 view .LVU377
 1342 002e FF20     		movs	r0, #255
 1343 0030 FFF7FEFF 		bl	xchg_byte
 1344              	.LVL138:
 445:Core/Src/sd.c ****     xchg_byte(SD_DUMMY_BYTE); // CRC
 1345              		.loc 1 445 5 view .LVU378
 1346 0034 FF20     		movs	r0, #255
 1347 0036 FFF7FEFF 		bl	xchg_byte
 1348              	.LVL139:
 446:Core/Src/sd.c **** 
 447:Core/Src/sd.c ****     /*get data response token*/
 448:Core/Src/sd.c ****     UINT8 timeout = 0xFF;
 1349              		.loc 1 448 5 view .LVU379
 449:Core/Src/sd.c ****     while ((rs = xchg_byte(SD_DUMMY_BYTE)) == 0xFF && --timeout)
 1350              		.loc 1 449 5 view .LVU380
 448:Core/Src/sd.c ****     while ((rs = xchg_byte(SD_DUMMY_BYTE)) == 0xFF && --timeout)
 1351              		.loc 1 448 11 is_stmt 0 view .LVU381
 1352 003a FF24     		movs	r4, #255
 1353              	.LVL140:
 1354              	.L108:
 450:Core/Src/sd.c ****         ;
 1355              		.loc 1 450 9 is_stmt 1 discriminator 2 view .LVU382
 449:Core/Src/sd.c ****     while ((rs = xchg_byte(SD_DUMMY_BYTE)) == 0xFF && --timeout)
 1356              		.loc 1 449 11 discriminator 2 view .LVU383
 449:Core/Src/sd.c ****     while ((rs = xchg_byte(SD_DUMMY_BYTE)) == 0xFF && --timeout)
 1357              		.loc 1 449 18 is_stmt 0 discriminator 2 view .LVU384
 1358 003c FF20     		movs	r0, #255
 1359 003e FFF7FEFF 		bl	xchg_byte
 1360              	.LVL141:
 449:Core/Src/sd.c ****     while ((rs = xchg_byte(SD_DUMMY_BYTE)) == 0xFF && --timeout)
 1361              		.loc 1 449 16 discriminator 2 view .LVU385
 1362 0042 85B2     		uxth	r5, r0
 1363              	.LVL142:
 449:Core/Src/sd.c ****     while ((rs = xchg_byte(SD_DUMMY_BYTE)) == 0xFF && --timeout)
 1364              		.loc 1 449 11 discriminator 2 view .LVU386
 1365 0044 FF2D     		cmp	r5, #255
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 35


 1366 0046 03D1     		bne	.L107
 449:Core/Src/sd.c ****     while ((rs = xchg_byte(SD_DUMMY_BYTE)) == 0xFF && --timeout)
 1367              		.loc 1 449 52 discriminator 1 view .LVU387
 1368 0048 631E     		subs	r3, r4, #1
 1369              	.LVL143:
 449:Core/Src/sd.c ****     while ((rs = xchg_byte(SD_DUMMY_BYTE)) == 0xFF && --timeout)
 1370              		.loc 1 449 52 discriminator 1 view .LVU388
 1371 004a 13F0FF04 		ands	r4, r3, #255
 1372 004e F5D1     		bne	.L108
 1373              	.LVL144:
 1374              	.L107:
 451:Core/Src/sd.c ****     if (!timeout)
 1375              		.loc 1 451 5 is_stmt 1 view .LVU389
 1376              		.loc 1 451 8 is_stmt 0 view .LVU390
 1377 0050 7CB1     		cbz	r4, .L112
 1378              	.LVL145:
 1379              	.L106:
 452:Core/Src/sd.c ****     {
 453:Core/Src/sd.c ****         sd_deselect();
 454:Core/Src/sd.c ****         return TIMEOUT;
 455:Core/Src/sd.c ****     }
 456:Core/Src/sd.c **** 
 457:Core/Src/sd.c ****     /*error handling function */
 458:Core/Src/sd.c **** 
 459:Core/Src/sd.c ****     return rs;
 460:Core/Src/sd.c **** }
 1380              		.loc 1 460 1 view .LVU391
 1381 0052 2846     		mov	r0, r5
 1382 0054 38BD     		pop	{r3, r4, r5, pc}
 1383              	.LVL146:
 1384              	.L110:
 424:Core/Src/sd.c ****     {
 1385              		.loc 1 424 49 discriminator 1 view .LVU392
 1386 0056 094A     		ldr	r2, .L113
 1387 0058 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 424:Core/Src/sd.c ****     {
 1388              		.loc 1 424 39 discriminator 1 view .LVU393
 1389 005a 002A     		cmp	r2, #0
 1390 005c D7D1     		bne	.L104
 426:Core/Src/sd.c ****         size = SDHC_SINGLE_BLOCK_SIZE;
 1391              		.loc 1 426 9 is_stmt 1 view .LVU394
 426:Core/Src/sd.c ****         size = SDHC_SINGLE_BLOCK_SIZE;
 1392              		.loc 1 426 14 is_stmt 0 view .LVU395
 1393 005e 490A     		lsrs	r1, r1, #9
 1394 0060 41EAC351 		orr	r1, r1, r3, lsl #23
 1395              	.LVL147:
 427:Core/Src/sd.c ****     }
 1396              		.loc 1 427 9 is_stmt 1 view .LVU396
 427:Core/Src/sd.c ****     }
 1397              		.loc 1 427 14 is_stmt 0 view .LVU397
 1398 0064 4FF40073 		mov	r3, #512
 1399              	.LVL148:
 427:Core/Src/sd.c ****     }
 1400              		.loc 1 427 14 view .LVU398
 1401 0068 0493     		str	r3, [sp, #16]
 1402 006a D0E7     		b	.L104
 1403              	.LVL149:
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 36


 1404              	.L111:
 433:Core/Src/sd.c ****         return rs;
 1405              		.loc 1 433 9 is_stmt 1 view .LVU399
 1406 006c FFF7FEFF 		bl	sd_deselect
 1407              	.LVL150:
 434:Core/Src/sd.c ****     }
 1408              		.loc 1 434 9 view .LVU400
 434:Core/Src/sd.c ****     }
 1409              		.loc 1 434 16 is_stmt 0 view .LVU401
 1410 0070 EFE7     		b	.L106
 1411              	.LVL151:
 1412              	.L112:
 453:Core/Src/sd.c ****         return TIMEOUT;
 1413              		.loc 1 453 9 is_stmt 1 view .LVU402
 1414 0072 FFF7FEFF 		bl	sd_deselect
 1415              	.LVL152:
 454:Core/Src/sd.c ****     }
 1416              		.loc 1 454 9 view .LVU403
 454:Core/Src/sd.c ****     }
 1417              		.loc 1 454 16 is_stmt 0 view .LVU404
 1418 0076 4125     		movs	r5, #65
 1419              	.LVL153:
 454:Core/Src/sd.c ****     }
 1420              		.loc 1 454 16 view .LVU405
 1421 0078 EBE7     		b	.L106
 1422              	.L114:
 1423 007a 00BF     		.align	2
 1424              	.L113:
 1425 007c 00000000 		.word	.LANCHOR1
 1426              		.cfi_endproc
 1427              	.LFE144:
 1429              		.section	.text.SD_Init,"ax",%progbits
 1430              		.align	1
 1431              		.global	SD_Init
 1432              		.syntax unified
 1433              		.thumb
 1434              		.thumb_func
 1435              		.fpu fpv4-sp-d16
 1437              	SD_Init:
 1438              	.LFB145:
 461:Core/Src/sd.c **** 
 462:Core/Src/sd.c **** Res_Status SD_Init(void)
 463:Core/Src/sd.c **** {
 1439              		.loc 1 463 1 is_stmt 1 view -0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443 0000 10B5     		push	{r4, lr}
 1444              	.LCFI24:
 1445              		.cfi_def_cfa_offset 8
 1446              		.cfi_offset 4, -8
 1447              		.cfi_offset 14, -4
 464:Core/Src/sd.c ****     Res_Status res;
 1448              		.loc 1 464 5 view .LVU407
 465:Core/Src/sd.c **** 
 466:Core/Src/sd.c ****     /*Pull up MOSI and CS voltage high in at least 74 clock*/
 467:Core/Src/sd.c ****     // HAL_Delay(10); // Delay to give sd card enough time to power up
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 37


 468:Core/Src/sd.c ****     CS_HIGH();
 1449              		.loc 1 468 5 view .LVU408
 1450 0002 0122     		movs	r2, #1
 1451 0004 4FF48051 		mov	r1, #4096
 1452 0008 0F48     		ldr	r0, .L121
 1453 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1454              	.LVL154:
 1455              		.loc 1 468 14 view .LVU409
 469:Core/Src/sd.c ****     for (int i = 0; i < 10; i++)
 1456              		.loc 1 469 5 view .LVU410
 1457              	.LBB9:
 1458              		.loc 1 469 10 view .LVU411
 1459              		.loc 1 469 14 is_stmt 0 view .LVU412
 1460 000e 0024     		movs	r4, #0
 1461              		.loc 1 469 5 view .LVU413
 1462 0010 03E0     		b	.L116
 1463              	.LVL155:
 1464              	.L117:
 470:Core/Src/sd.c ****     {
 471:Core/Src/sd.c ****         /*send at least 80 dummy byte*/
 472:Core/Src/sd.c ****         xchg_byte(SD_DUMMY_BYTE);
 1465              		.loc 1 472 9 is_stmt 1 discriminator 3 view .LVU414
 1466 0012 FF20     		movs	r0, #255
 1467 0014 FFF7FEFF 		bl	xchg_byte
 1468              	.LVL156:
 469:Core/Src/sd.c ****     for (int i = 0; i < 10; i++)
 1469              		.loc 1 469 29 discriminator 3 view .LVU415
 469:Core/Src/sd.c ****     for (int i = 0; i < 10; i++)
 1470              		.loc 1 469 30 is_stmt 0 discriminator 3 view .LVU416
 1471 0018 0134     		adds	r4, r4, #1
 1472              	.LVL157:
 1473              	.L116:
 469:Core/Src/sd.c ****     for (int i = 0; i < 10; i++)
 1474              		.loc 1 469 21 is_stmt 1 discriminator 1 view .LVU417
 469:Core/Src/sd.c ****     for (int i = 0; i < 10; i++)
 1475              		.loc 1 469 5 is_stmt 0 discriminator 1 view .LVU418
 1476 001a 092C     		cmp	r4, #9
 1477 001c F9DD     		ble	.L117
 1478              	.LBE9:
 473:Core/Src/sd.c ****     }
 474:Core/Src/sd.c **** 
 475:Core/Src/sd.c ****     if ((res = SD_GoIdleState()) != IDLE_STATE) // CMD0 check pass;
 1479              		.loc 1 475 5 is_stmt 1 view .LVU419
 1480              		.loc 1 475 16 is_stmt 0 view .LVU420
 1481 001e FFF7FEFF 		bl	SD_GoIdleState
 1482              	.LVL158:
 1483 0022 0446     		mov	r4, r0
 1484              	.LVL159:
 1485              		.loc 1 475 8 view .LVU421
 1486 0024 0128     		cmp	r0, #1
 1487 0026 01D0     		beq	.L120
 1488              	.LVL160:
 1489              	.L118:
 476:Core/Src/sd.c ****     {
 477:Core/Src/sd.c ****         return res;
 478:Core/Src/sd.c ****     }
 479:Core/Src/sd.c ****     if ((res = SD_CheckVersion()) != IDLE_STATE) // CMD8 check pass
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 38


 480:Core/Src/sd.c ****     {
 481:Core/Src/sd.c ****         return res;
 482:Core/Src/sd.c ****     }
 483:Core/Src/sd.c **** 
 484:Core/Src/sd.c ****     if ((res = SD_getCardType()) != SD_NO_ERROR) // CMD58 check pass
 485:Core/Src/sd.c ****     {
 486:Core/Src/sd.c ****         return res;
 487:Core/Src/sd.c ****     }
 488:Core/Src/sd.c **** 
 489:Core/Src/sd.c ****     sd_deselect();
 490:Core/Src/sd.c ****     return SD_NO_ERROR;
 491:Core/Src/sd.c **** }
 1490              		.loc 1 491 1 view .LVU422
 1491 0028 2046     		mov	r0, r4
 1492 002a 10BD     		pop	{r4, pc}
 1493              	.LVL161:
 1494              	.L120:
 479:Core/Src/sd.c ****     {
 1495              		.loc 1 479 5 is_stmt 1 view .LVU423
 479:Core/Src/sd.c ****     {
 1496              		.loc 1 479 16 is_stmt 0 view .LVU424
 1497 002c FFF7FEFF 		bl	SD_CheckVersion
 1498              	.LVL162:
 479:Core/Src/sd.c ****     {
 1499              		.loc 1 479 16 view .LVU425
 1500 0030 0446     		mov	r4, r0
 1501              	.LVL163:
 479:Core/Src/sd.c ****     {
 1502              		.loc 1 479 8 view .LVU426
 1503 0032 0128     		cmp	r0, #1
 1504 0034 F8D1     		bne	.L118
 484:Core/Src/sd.c ****     {
 1505              		.loc 1 484 5 is_stmt 1 view .LVU427
 484:Core/Src/sd.c ****     {
 1506              		.loc 1 484 16 is_stmt 0 view .LVU428
 1507 0036 FFF7FEFF 		bl	SD_getCardType
 1508              	.LVL164:
 484:Core/Src/sd.c ****     {
 1509              		.loc 1 484 8 view .LVU429
 1510 003a 0446     		mov	r4, r0
 1511 003c 0028     		cmp	r0, #0
 1512 003e F3D1     		bne	.L118
 489:Core/Src/sd.c ****     return SD_NO_ERROR;
 1513              		.loc 1 489 5 is_stmt 1 view .LVU430
 1514 0040 FFF7FEFF 		bl	sd_deselect
 1515              	.LVL165:
 490:Core/Src/sd.c **** }
 1516              		.loc 1 490 5 view .LVU431
 490:Core/Src/sd.c **** }
 1517              		.loc 1 490 12 is_stmt 0 view .LVU432
 1518 0044 F0E7     		b	.L118
 1519              	.L122:
 1520 0046 00BF     		.align	2
 1521              	.L121:
 1522 0048 00040048 		.word	1207960576
 1523              		.cfi_endproc
 1524              	.LFE145:
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 39


 1526              		.global	sd_Info
 1527              		.section	.bss.res.0,"aw",%nobits
 1528              		.align	1
 1529              		.set	.LANCHOR0,. + 0
 1532              	res.0:
 1533 0000 0000     		.space	2
 1534              		.section	.bss.sd_Info,"aw",%nobits
 1535              		.align	3
 1536              		.set	.LANCHOR1,. + 0
 1539              	sd_Info:
 1540 0000 00000000 		.space	24
 1540      00000000 
 1540      00000000 
 1540      00000000 
 1540      00000000 
 1541              		.text
 1542              	.Letext0:
 1543              		.file 2 "d:\\msys64\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 1544              		.file 3 "d:\\msys64\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 1545              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 1546              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1547              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 1548              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1549              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_spi.h"
 1550              		.file 9 "Core/Inc/sd.h"
 1551              		.file 10 "Core/Inc/main.h"
ARM GAS  C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sd.c
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:18     .text.xchg_byte:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:26     .text.xchg_byte:0000000000000000 xchg_byte
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:66     .text.xchg_byte:0000000000000028 $d
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:71     .text.rcv_mul_byte:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:78     .text.rcv_mul_byte:0000000000000000 rcv_mul_byte
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:129    .text.xmit_mul_byte:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:136    .text.xmit_mul_byte:0000000000000000 xmit_mul_byte
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:188    .text.sd_wait_ready:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:195    .text.sd_wait_ready:0000000000000000 sd_wait_ready
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:247    .text.sd_deselect:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:254    .text.sd_deselect:0000000000000000 sd_deselect
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:281    .text.sd_deselect:0000000000000018 $d
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:286    .text.sd_select:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:293    .text.sd_select:0000000000000000 sd_select
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:338    .text.sd_select:0000000000000028 $d
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:343    .text.send_cmd:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:349    .text.send_cmd:0000000000000000 send_cmd
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:487    .text.SD_GoIdleState:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:494    .text.SD_GoIdleState:0000000000000000 SD_GoIdleState
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:533    .text.SD_GoIdleState:0000000000000020 $d
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:538    .text.SD_CheckVersion:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:545    .text.SD_CheckVersion:0000000000000000 SD_CheckVersion
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:714    .text.SD_CheckVersion:0000000000000090 $d
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:720    .text.SD_getCardType:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:727    .text.SD_getCardType:0000000000000000 SD_getCardType
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:909    .text.SD_getCardType:000000000000008c $d
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:914    .text.SD_getCSDRegister:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:921    .text.SD_getCSDRegister:0000000000000000 SD_getCSDRegister
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1135   .text.SD_getCSDRegister:0000000000000100 $d
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1140   .text.SD_readSingleBlock:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1147   .text.SD_readSingleBlock:0000000000000000 SD_readSingleBlock
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1274   .text.SD_readSingleBlock:0000000000000070 $d
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1279   .text.SD_writeSingleBlock:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1286   .text.SD_writeSingleBlock:0000000000000000 SD_writeSingleBlock
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1425   .text.SD_writeSingleBlock:000000000000007c $d
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1430   .text.SD_Init:0000000000000000 $t
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1437   .text.SD_Init:0000000000000000 SD_Init
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1522   .text.SD_Init:0000000000000048 $d
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1539   .bss.sd_Info:0000000000000000 sd_Info
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1528   .bss.res.0:0000000000000000 $d
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1532   .bss.res.0:0000000000000000 res.0
C:\Users\Falle\AppData\Local\Temp\ccURZOsH.s:1535   .bss.sd_Info:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_SPI_TransmitReceive
hspi2
HAL_GPIO_WritePin
